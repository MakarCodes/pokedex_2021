{"version":3,"sources":["components/Gallery/Gallery.module.scss","components/UI/Spinner/Spinner.module.scss","components/Pokedex/FilterButton/FilterButton.module.scss","components/Pokedex/Pagination/Dots/Dots.module.scss","components/UI/RouteModal/RouteModal.module.scss","components/Contact/Contact.module.scss","components/Pokedex/PokemonDetails/PokemonDetails.module.scss","components/Pokedex/PokemonCard/PokemonCard.module.scss","components/Pokedex/Filter/Filter.module.scss","reducers/formDataReducer.tsx","components/Footer/Footer.tsx","components/Navbar/Hamburger/Hamburger.tsx","components/Navbar/SingleLink/SingleLink.tsx","components/Navbar/Links/Links.tsx","assets/images/Pokemon-LOGO.png","components/Navbar/Logo/Logo.tsx","components/Navbar/Navbar.tsx","components/Layout/Layout.tsx","components/BestPokemons/BestPokemons.tsx","components/Contact/Form/validationSchema.ts","constans/constans.ts","components/Contact/Form/SingleInput/SingleInput.tsx","components/Contact/Form/SelectInput/SelectInput.tsx","components/Contact/Form/CheckboxInput/CheckboxInput.tsx","requestMethods/postData.ts","components/Contact/Form/Form.tsx","components/UI/Modal/Modal.tsx","store/pokemons/reducer/pokemonReducer.tsx","components/Contact/Contact.tsx","reducers/filterReducer.tsx","store/pokemons/context/pokemonsContextProvider.tsx","store/pokemons/context/actionsFactory.tsx","components/UI/Spinner/Spinner.tsx","components/Pokedex/FilterButton/FilterButton.tsx","components/Pokedex/Filter/Filter.tsx","customHooks/useTypeChanger.tsx","components/Pokedex/Pagination/reducer/reducerTypes.ts","components/Pokedex/Pagination/PaginationBtn/PaginationBtn.tsx","components/Pokedex/Pagination/Dots/Dots.tsx","components/Pokedex/Pagination/PaginateActionBtn/PaginateActionBtn.tsx","components/Pokedex/Pagination/PaginationPanel/PaginationPanel.tsx","components/Pokedex/Pagination/PaginationPanel/generatePagesToRender.tsx","components/Pokedex/Pagination/helpers/helpers.ts","store/description/reducer/descriptionReducer.tsx","components/Pokedex/Pagination/reducer/paginationReducer.tsx","components/Pokedex/Pagination/usePagination/actionsFactory.ts","components/Pokedex/Pagination/usePagination/usePagination.tsx","components/Pokedex/PokemonCard/PokemonCard.tsx","components/Pokedex/Pokemons/Pokemons.tsx","components/Pokedex/Pokedex.tsx","assets/images/pokemon_1.jpg","assets/images/pokemon_2.jpg","assets/images/pokemon_3.jpg","assets/images/pokemon_4.jpg","assets/images/pokemon_5.jpg","assets/images/pokemon_6.jpg","assets/images/pokemon_7.jpg","assets/images/pokemon_8.jpg","assets/images/pokemon_9.jpg","assets/images/pokemon_10.jpg","components/Gallery/PhotoItem/PhotoItem.tsx","components/Gallery/Gallery.tsx","components/UI/RouteModal/RouteModal.tsx","store/description/context/descriptionContextProvider.tsx","store/description/context/actionsFactory.tsx","store/description/context/getDescription.ts","components/Pokedex/PokemonDetails/Skill/Skill.tsx","components/Pokedex/PokemonDetails/PokemonDetails.tsx","components/Page404/Page404.tsx","components/Routes/Routes.tsx","customHooks/useQuery.ts","store/pokemons/context/getPokemons.ts","App.tsx","contexts/ViewportSizeContextProvider.tsx","index.tsx","components/Footer/Footer.module.scss","components/Pokedex/Pokedex.module.scss","components/Contact/Form/Form.module.scss","components/Pokedex/Pagination/PaginationPanel/PaginationPanel.module.scss","components/Contact/Form/SingleInput/SingleInput.module.scss","components/Contact/Form/SelectInput/SelectInput.module.scss","components/Contact/Form/CheckboxInput/CheckboxInput.module.scss","components/UI/Modal/Modal.module.scss","components/Pokedex/Pagination/PaginationBtn/PaginationBtn.module.scss","components/Pokedex/PokemonDetails/Skill/Skill.module.scss","components/Navbar/Hamburger/Hamburger.module.scss","components/Navbar/Links/Links.module.scss","components/Page404/Page404.module.scss","components/Navbar/SingleLink/SingleLink.module.scss","components/Layout/Layout.module.scss","components/Navbar/Logo/Logo.module.scss","components/Navbar/Navbar.module.scss"],"names":["module","exports","ActionTypes","Footer","setFooterHeight","targetRef","useRef","useLayoutEffect","current","offsetHeight","className","classes","FooterContainer","ref","FooterWrapper","CopyrightsContainer","LinksContainer","href","Link","Hamburger","isOpen","toggle","HamburgerOpen","onClick","SingleLink","path","value","ListItem","to","Links","List","ListOpen","Logo","src","PokemonLogo","alt","Navbar","setNavbarHeight","useState","setIsOpen","Wrapper","Layout","children","navbarHeight","footerHeight","childrenHeight","setChildrenHeight","useEffect","window","innerHeight","style","minHeight","InnerWrapper","BestPokemons","strinRegex","schema","yup","shape","name","required","min","max","matches","lastName","username","email","pesel","test","val","toString","length","typeError","zipCode","city","birthDate","agree","oneOf","POKEMON_TYPES","TYPE_COLORS","poison","grass","fire","flying","water","bug","normal","electric","ground","fairy","fighting","psychic","rock","ghost","ice","steel","dragon","dark","cityData","SingleInput","type","placeholder","defaultValue","errors","register","label","maxDate","InputGroup","LabelRequired","Label","Input","ErrorField","message","SelectInput","data","map","item","idx","CheckboxInput","postData","url","a","fetch","method","headers","body","JSON","stringify","response","json","dataFromResponse","Form","onSuccessPostRequest","useForm","resolver","yupResolver","mode","handleSubmit","setValue","resetForm","Title","onSubmit","then","console","log","Date","toISOString","substring","ButtonsContainer","Btn","Cancel","Modal","isVisible","toggleVisibility","handleEscape","useCallback","event","keyCode","document","addEventListener","removeEventListener","ReactDOM","createPortal","styles","Overlay","ModalClose","ModalCloseButton","data-dismiss","aria-label","aria-hidden","initialState","filterReducer","state","action","SET_DATA","payload","setDataFromForm","Contact","useReducer","formDataReducer","dispatch","setIsVisible","useModalLogic","actions","setFormData","actionsFactory","ModalContentWrapper","ModalContentTitle","ModalContentData","pokemons","isLoading","error","pokemonsReducer","FETCHING_DATA_START","FETCHING_DATA_SUCCESS","FETCHING_DATA_FAIL","initCtx","pokedexState","fetchActions","fetchPokemonsStart","fetchPokemonsSuccess","fetchPokemonsFail","pokedexCtx","createContext","PokemonsContextProvider","providerValue","Provider","Spinner","Loader","FilterButton","handleTypeChange","bgColor","e","FilterBtn","backgroundColor","Filter","types","resetTypes","useToggle","filterButtonsToRender","useMemo","pokemonType","btnType","currentTypes","indexOf","Container","FilterTitle","Note","ActionBtnContainer","ToggleBtn","icon","faFilter","size","ResetBtn","ButtonsWrapper","useTypeChanger","setTypes","newTypes","splice","pokemonsToDisplay","isFilterActive","SET_POKEMONS_TO_DISPLAY","setPokemonsToDisplay","FILTER_POKEMONS","filter","pokemon","every","filterPokemonsByType","filterPokemons","PaginationBtn","number","actualPageIdx","goToPage","PaginationBtnActive","Dots","PaginateActionBtn","actionName","testID","actionFn","data-testid","PaginationPanel","paginationState","paginationActions","pagesNumbers","lastPageIdx","goToFirstPage","goToPreviousPage","goToNextPage","goToLastPage","pagesToRender","Array","_","LAST_NUMBER_AT_START","generatePagsToRender","PaginationWrapper","Chevron","ChevronLeft","dat-testid","display","ChevronRight","entriesOnSelectedPage","elementsOnPage","isBusy","paginationReducer","UPDATE_DATA_ENTIRES_ON_PAGE","updateDataEntriesOnPage","UPDATE_ACTUAL_PAGE_INDEX","updateActualPageIndex","SET_TO_LOADING","setToLoading","SET_TO_LOADING_DONE","setToLoadingDone","dataEntries","Math","ceil","lastAvailableIdx","i","push","generatePagesNumbers","firstElementIdxOnActualPage","lastElementIdxOnActualPage","slice","getEntriesOnSelectedPage","updateType","pageNumber","actualPageIdxPrev","updateDataEntries","setToIsLoading","usePagination","timer","setTimeout","clearTimeout","paginationStateValues","handleMouseMoveOverImage","pokemonSprite","target","PokemonCard","location","useLocation","id","height","weight","sprites","cardBg","bgColorTypes","forEach","index","background","generateBgDependingOnType","pokemonTypes","charAt","toUpperCase","join","drawTypes","pokemonId","drawId","pathname","search","textDecoration","onMouseOver","back_default","onMouseOut","front_default","PokemonName","PokemonId","Info","DetailInfo","faWeightHanging","WeightHeight","faSortAmountUp","Details","Type","Pokemons","Pokedex","useContext","Error","SpinnerContainer","LoadingText","PhotoItem","img","gridClass","Center","ResponsiveImage","Gallery","GridContainer","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","RouteModal","history","useHistory","overflow","stopPropagation","goBack","pokemonDetails","stats","statName","statValue","description","descriptionReducer","FETCHING_DESCRIPTION_START","FETCHING_DESCRIPTION_SUCCESS","FETCHING_DESCRIPTION_FAIL","fetchDescriptionStart","fetchDescriptionSuccess","fetchDescriptionFail","descriptionCtx","DescriptionContextProvider","getDescription","urlPath","flavor_text_entries","find","text","language","convertedDescription","flavor_text","replace","Skill","StatName","StatValue","OutsideSkillBar","InsideSkillBar","width","PokemonDetails","id_url","spanTypes","spanStyle","color","border","SpanType","generatePokemonSpanTypes","id_format","skillsList","stat","generateSkills","parseInt","findPokemonById","fetchDescription","DetailsCard","closeIcon","closeModal","faTimes","PokemonDescription","PokemonInfoContainer","PokemonWeight","SkillsContainer","Page404","Back","Routes","key","URLSearchParams","get","useQuery","component","exact","getPokemons","Promise","all","results","result","spritesImages","pokemonStats","singleStat","base_stat","App","fetchPokemons","viewportSizeContext","innerWidth","ViewportSizeContextProvider","windowSize","setWindowSize","handleWindowResize","render","StrictMode","basename","process","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,cAAgB,+BAA+B,OAAS,wBAAwB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,GAAK,oBAAoB,IAAM,qBAAqB,IAAM,qBAAqB,gBAAkB,mC,oBCA7cD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,oBCA1FD,EAAOC,QAAU,CAAC,UAAY,kC,oBCA9BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,UAAY,gC,mBCAtGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,oBAAsB,qCAAqC,kBAAoB,mCAAmC,iBAAmB,oC,mBCA1LD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,YAAc,oCAAoC,YAAc,oCAAoC,UAAY,kCAAkC,mBAAqB,2CAA2C,qBAAuB,6CAA6C,cAAgB,sCAAsC,gBAAkB,wCAAwC,UAAY,kCAAkC,SAAW,mC,mBCA3fD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,+BAA+B,KAAO,0BAA0B,aAAe,kCAAkC,KAAO,0BAA0B,QAAU,6BAA6B,WAAa,kC,mBCAlUD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,YAAc,4BAA4B,KAAO,qBAAqB,UAAY,0BAA0B,mBAAqB,mCAAmC,SAAW,yBAAyB,eAAiB,iC,kECgBvSC,E,uFCiBGC,EA3BkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC5BC,EAA2DC,iBAAO,MAMxE,OALAC,2BAAgB,WACVF,EAAUG,SACZJ,EAAgBC,EAAUG,QAAQC,gBAEnC,CAACL,IAEF,qBAAKM,UAAWC,IAAQC,gBAAiBC,IAAKR,EAA9C,SACE,sBAAKK,UAAWC,IAAQG,cAAxB,UACE,qBAAKJ,UAAWC,IAAQI,oBAAxB,iCACA,sBAAKL,UAAWC,IAAQK,eAAxB,UACE,mBAAGC,KAAK,IAAIP,UAAWC,IAAQO,KAA/B,uCAGA,mBAAGD,KAAK,IAAIP,UAAWC,IAAQO,KAA/B,yBAGA,mBAAGD,KAAK,IAAIP,UAAWC,IAAQO,KAA/B,8B,iBCCKC,EAnBqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC7C,OACE,mCACE,yBACEX,UACEU,EAAM,UACCT,IAAQQ,UADT,YACsBR,IAAQW,eAChCX,IAAQQ,UAEdI,QAAS,kBAAMF,KANjB,UAQE,wBACA,wBACA,8B,yBCDOG,EAVsB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOL,EAAa,EAAbA,OACnD,OACE,oBAAIX,UAAWC,IAAQgB,SAAvB,SACE,cAAC,IAAD,CAAMC,GAAIH,EAAMf,UAAWC,IAAQO,KAAMK,QAAS,kBAAMF,KAAxD,SACGK,O,iBCQMG,EAbiB,SAAC,GAAwB,IAAtBT,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACzC,OACE,sBACEX,UAAWU,EAAM,UAAMT,IAAQmB,KAAd,YAAsBnB,IAAQoB,UAAapB,IAAQmB,KADtE,UAGE,cAAC,EAAD,CAAYL,KAAK,IAAIC,MAAM,UAAUL,OAAQA,IAC7C,cAAC,EAAD,CAAYI,KAAK,UAAUC,MAAM,SAASL,OAAQA,IAClD,cAAC,EAAD,CAAYI,KAAK,WAAWC,MAAM,UAAUL,OAAQA,IACpD,cAAC,EAAD,CAAYI,KAAK,WAAWC,MAAM,UAAUL,OAAQA,QChB3C,MAA0B,yC,iBCW1BW,EARQ,WACrB,OACE,qBAAKtB,UAAWC,IAAQqB,KAAxB,SACE,qBAAKC,IAAKC,EAAaC,IAAI,uB,iBC2BlBC,EArBkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EAC5BC,oBAAS,GADmB,mBACjDlB,EADiD,KACzCmB,EADyC,KAGlDlB,EAAS,kBAAMkB,GAAWnB,IAE1Bf,EAA2DC,iBAAO,MAOxE,OANAC,2BAAgB,WACVF,EAAUG,SACZ6B,EAAgBhC,EAAUG,QAAQC,gBAEnC,CAAC4B,IAGF,sBAAK3B,UAAWC,IAAQ6B,QAAS3B,IAAKR,EAAtC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOe,OAAQA,EAAQC,OAAQA,IAC/B,cAAC,EAAD,CAAWD,OAAQA,EAAQC,OAAQA,Q,iBCA1BoB,EAtB2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBJ,mBAAS,GADS,mBACnDK,EADmD,KACrCN,EADqC,OAElBC,mBAAS,GAFS,mBAEnDM,EAFmD,KAErCxC,EAFqC,OAGdkC,mBAAS,GAHK,mBAGnDO,EAHmD,KAGnCC,EAHmC,KAO1D,OAHAC,qBAAU,WACRD,EAAkBE,OAAOC,YAAcN,EAAeC,KACrD,CAACD,EAAcC,IAEhB,sBAAKlC,UAAWC,IAAQ6B,QAAxB,UACE,cAAC,EAAD,CAAQH,gBAAiBA,IACzB,qBACEa,MAAO,CAAEC,UAAU,GAAD,OAAKN,EAAL,OAElBnC,UAAWC,IAAQyC,aAHrB,SAKGV,IAEH,cAAC,EAAD,CAAQtC,gBAAiBA,Q,OCjBhBiD,EAJM,WACnB,OAAO,iF,yBCDHC,EAAa,kBAGNC,EAASC,MAAaC,MAAM,CACvCC,KAAMF,MAEHG,SAAS,0BACTC,IAAI,EAAG,qBACPC,IAAI,IAAK,uBACTC,QAAQR,EAAY,gBACvBS,SAAUP,MAEPG,SAAS,0BACTC,IAAI,EAAG,qBACPC,IAAI,IAAK,uBACTC,QAAQR,EAAY,mBACvBU,SAAUR,MAEPG,SAAS,0BACTC,IAAI,EAAG,qBACPC,IAAI,IAAK,uBACZI,MAAOT,MAEJS,MAAM,yBACNN,SAAS,0BACZO,MAAOV,MAEJG,SAAS,0BACTQ,KAAK,MAAO,oCAAoC,SAAAC,GAC/C,QAAIA,GAAsC,KAA1BA,EAAIC,WAAWC,UAGhCC,UAAU,0BACbC,QAAShB,MAENG,SAAS,0BACTG,QAnCiB,oBAmCM,oBACvBQ,OAAO,EAAG,oBACbG,KAAMjB,MAAaG,SAAS,0BAC5Be,UAAWlB,MAAaG,SAAS,0BACjCgB,MAAOnB,MAEJG,SAAS,8CACTiB,MAAM,EAAC,GAAO,2C,iBCxCNC,EAAyC,CACpD,SACA,WACA,SACA,SACA,SACA,OACA,MACA,QACA,QACA,OACA,QACA,QACA,WACA,UACA,MACA,SACA,QACA,QAOWC,EAAsB,CACjCC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,IAAK,UACLC,OAAQ,UACRC,SAAU,UACVC,OAAQ,UACRC,MAAO,UACPC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,WAGKC,EAAW,CAAC,WAAY,eAAW,YAAU,cAAU,e,iBCHrDC,EAhCuB,SAAC,GAUhC,IAAD,EATJxC,EASI,EATJA,KACAyC,EAQI,EARJA,KACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,aACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACA5C,EAGI,EAHJA,SACA6C,EAEI,EAFJA,MACAC,EACI,EADJA,QAEA,OACE,sBAAK/F,UAAWC,IAAQ+F,WAAxB,UACE,wBAAOhG,UAAWiD,EAAWhD,IAAQgG,cAAgBhG,IAAQiG,MAA7D,UACGJ,EADH,OAGA,uBACE9F,UAAWC,IAAQkG,MACnBhG,IAAK0F,EACL7C,KAAMA,EACNyC,KAAMA,EACNE,aAAcA,GAA8B,GAC5CD,YAAaA,GAA4B,GACzCvC,IAAK4C,GAAoB,OAE1BH,EAAO5C,IACN,mBAAGhD,UAAWC,IAAQmG,WAAtB,mBAAmCR,EAAO5C,UAA1C,aAAmC,EAAcqD,c,iBCO1CC,EApCuB,SAAC,GAShC,IAAD,EARJC,EAQI,EARJA,KACAvD,EAOI,EAPJA,KACA6C,EAMI,EANJA,SACAD,EAKI,EALJA,OACA3C,EAII,EAJJA,SACA6C,EAGI,EAHJA,MACAJ,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,OACE,sBAAK3F,UAAWC,IAAQ+F,WAAxB,UACE,wBAAOhG,UAAWiD,EAAWhD,IAAQgG,cAAgBhG,IAAQiG,MAA7D,UACGJ,EADH,OAGA,yBACE9F,UAAWC,IAAQkG,MACnBhG,IAAK0F,EACL7C,KAAMA,EACN2C,aAAcA,GAA8B,GAC5CD,YAAaA,GAA4B,GAL3C,UAOE,wBAAQ1E,MAAM,KACbuF,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACR,wBAAQ1F,MAAOyF,EAAf,SACGA,GADuBA,EAAOC,SAKpCd,EAAO5C,IACN,mBAAGhD,UAAWC,IAAQmG,WAAtB,mBAAmCR,EAAO5C,UAA1C,aAAmC,EAAcqD,c,oBCD1CM,GA9ByB,SAAC,GAMlC,IAAD,EALJ3D,EAKI,EALJA,KACAyC,EAII,EAJJA,KACAG,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACA5C,EACI,EADJA,SAEA,OACE,sBAAKjD,UAAWC,KAAQ+F,WAAxB,UACE,wBAAOhG,UAAWiD,EAAWhD,KAAQgG,cAAgBhG,KAAQiG,MAA7D,UACE,uBACElG,UAAWC,KAAQkG,MACnBhG,IAAK0F,EACL7C,KAAMA,EACNyC,KAAMA,IALV,qYAcCG,EAAO5C,IACN,mBAAGhD,UAAWC,KAAQmG,WAAtB,mBAAmCR,EAAO5C,UAA1C,aAAmC,EAAcqD,cChC5CO,GAAQ,uCAAG,WAAOC,EAAaN,GAApB,iBAAAO,EAAA,sEACCC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUb,KAND,cAChBc,EADgB,gBASSA,EAASC,OATlB,cAShBC,EATgB,yBAUfA,GAVe,2CAAH,wDC4JNC,GApIgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAA2B,EACNC,YAAQ,CAC3DC,SAAUC,sBAAY/E,GACtBgF,KAAM,QAFAhC,EADmD,EACnDA,SAAUiC,EADyC,EACzCA,aAAclC,EAD2B,EAC3BA,OAAQmC,EADmB,EACnBA,SAKlCC,EAAY,WAChBD,EAAS,OAAQ,IACjBA,EAAS,WAAY,IACrBA,EAAS,WAAY,IACrBA,EAAS,QAAS,IAClBA,EAAS,QAAS,IAClBA,EAAS,UAAW,IACpBA,EAAS,OAAQ,IACjBA,EAAS,YAAa,IACtBA,EAAS,QAAS,KAepB,OACE,qCACE,oBAAI/H,UAAWC,IAAQgI,MAAvB,0BACA,uBAAMjI,UAAWC,IAAQuH,KAAMU,SAAUJ,GAf5B,SAACvB,GAChBK,GAAS,8CAA+CL,GAAM4B,MAAK,WACjEC,QAAQC,IAAI9B,EAAM,yCAClBkB,EAAqBlB,MAEvByB,OAUE,UACE,cAAC,EAAD,CACEnC,SAAUA,EACVD,OAAQA,EACR5C,KAAK,OACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,aACNJ,YAAY,kBAEd,cAAC,EAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,WACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,YACNJ,YAAY,iBAEd,cAAC,EAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,WACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,WACNJ,YAAY,gBAEd,cAAC,EAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,QACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,QACNJ,YAAY,aAEd,cAAC,EAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,QACLyC,KAAK,SACLxC,UAAU,EACV6C,MAAM,eACNJ,YAAY,aAEd,cAAC,EAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,YACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,aACNJ,YAAY,aACZK,SAAS,IAAIuC,MAAOC,cAAcC,UAAU,EAAG,MAEjD,cAAC,EAAD,CACE3C,SAAUA,EACVD,OAAQA,EACR5C,KAAK,UACLyC,KAAK,OACLxC,UAAU,EACV6C,MAAM,WACNJ,YAAY,gBAEd,cAAC,EAAD,CACEa,KAAMhB,EACNM,SAAUA,EACVD,OAAQA,EACR5C,KAAK,OACLC,UAAU,EACV6C,MAAM,OACNJ,YAAY,YAEd,cAAC,GAAD,CACEG,SAAUA,EACVD,OAAQA,EACR5C,KAAK,QACLyC,KAAK,WACLxC,UAAU,IAGZ,sBAAKjD,UAAWC,IAAQwI,iBAAxB,UACE,wBACEhD,KAAK,SACL5E,QAAS,WA3FjBmH,KA4FQhI,UAAS,UAAKC,IAAQyI,IAAb,YAAoBzI,IAAQ0I,QAHvC,oBAOA,wBAAQlD,KAAK,SAASzF,UAAWC,IAAQyI,IAAzC,8B,wCCzFKE,GA5CiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,iBAAkB9G,EAAe,EAAfA,SACxD+G,EAAeC,uBACnB,SAAAC,GACwB,KAAlBA,EAAMC,SACRJ,MAGJ,CAACA,IAQH,OALAzG,qBAAU,WAER,OADIwG,GAAWM,SAASC,iBAAiB,UAAWL,GAAc,GAC3D,kBAAMI,SAASE,oBAAoB,UAAWN,GAAc,MAClE,CAACA,EAAcF,IAEXA,EACHS,IAASC,aACP,qCACE,qBACEvJ,UAAWwJ,KAAOC,QAClB5I,QAAS,kBAAMiI,OAEjB,qBAAK9I,UAAWwJ,KAAO1H,QAAvB,SACE,sBAAK9B,UAAWwJ,KAAOZ,MAAvB,UACE,qBAAK5I,UAAWwJ,KAAOE,WAAvB,SACE,wBACEjE,KAAK,SACLzF,UAAWwJ,KAAOG,iBAClBC,eAAa,QACbC,aAAW,QACXhJ,QAAS,kBAAMiI,KALjB,SAOE,sBAAMgB,cAAY,OAAlB,sBAGH9H,UAIPmH,SAASjC,MAEX,MjBvDO6C,GAAuB,CAClCxD,KAAM,CACJvD,KAAM,GACNK,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,MAAO,UACPM,QAAS,GACTC,KAAM,GACNC,UAAW,M,SAIHxE,K,qBAAAA,M,KAWZ,IkBhBYA,GlBgCGwK,GATO,SAACC,EAAeC,GACpC,OAAQA,EAAOzE,MACb,KAAKjG,EAAY2K,SACf,OAVkB,SAACF,EAAeC,GAEtC,MAAO,CACL3D,KAFe2D,EAAOE,QAAhB7D,MASG8D,CAAgBJ,EAAOC,GAChC,QACE,OAAOD,ImBqBEK,GAzCC,WAAO,IAAD,EACMC,qBAAWC,GAAiBT,IADlC,mBACbE,EADa,KACNQ,EADM,OAWhBR,EAAM1D,KARRvD,EAHkB,EAGlBA,KACAK,EAJkB,EAIlBA,SACAC,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,MACAC,EAPkB,EAOlBA,MACAM,EARkB,EAQlBA,QACAC,EATkB,EASlBA,KACAC,EAVkB,EAUlBA,UAVkB,EFhBO,WAAO,IAAD,EACCpC,oBAAS,GADV,mBAC1BiH,EAD0B,KACf6B,EADe,KAKjC,MAAO,CAAE7B,YAAWC,iBAFK,kBAAM4B,GAAc7B,KEyBL8B,GAAhC9B,EAZY,EAYZA,UAAWC,EAZC,EAYDA,iBACb8B,EAvBe,SAACH,GAAD,MAAwC,CAC7DI,YAAa,SAACtE,GAAD,OACXkE,EAAS,CACPhF,KAAMjG,EAAY2K,SAClBC,QAAS,CACP7D,YAkBUuE,CAAeL,GAM/B,OACE,sBAAKzK,UAAWC,KAAQ6B,QAAxB,UACE,cAAC,GAAD,CAAM2F,qBANmB,SAAClB,GAC5BuC,IACA8B,EAAQC,YAAYtE,MAKlB,cAAC,GAAD,CAAOsC,UAAWA,EAAWC,iBAAkBA,EAA/C,SACE,sBAAK9I,UAAWC,KAAQ8K,oBAAxB,UACE,mBAAG/K,UAAWC,KAAQ+K,kBAAtB,mDAGA,oBAAGhL,UAAWC,KAAQgL,iBAAtB,mBAA+CjI,KAC/C,oBAAGhD,UAAWC,KAAQgL,iBAAtB,sBAAkD5H,KAClD,oBAAGrD,UAAWC,KAAQgL,iBAAtB,uBAAmD3H,KACnD,oBAAGtD,UAAWC,KAAQgL,iBAAtB,oBAAgD1H,KAChD,oBAAGvD,UAAWC,KAAQgL,iBAAtB,oBAAgDzH,KAChD,oBAAGxD,UAAWC,KAAQgL,iBAAtB,yBAAqDjH,KACrD,oBAAGhE,UAAWC,KAAQgL,iBAAtB,uBAAmDnH,KACnD,oBAAG9D,UAAWC,KAAQgL,iBAAtB,mBAA+ClH,c,4BDhD5CgG,GAAe,CAC1BmB,SAAU,GACVC,WAAW,EACXC,OAAO,I,SAGG5L,K,0CAAAA,E,8CAAAA,E,yCAAAA,Q,KAkBZ,IEpBYA,GFiCG6L,GAbS,SAACpB,EAAeC,GACtC,OAAQA,EAAOzE,MACb,KAAKjG,GAAY8L,oBACf,OAAO,6BAAKrB,GAAZ,IAAmBkB,WAAW,IAChC,KAAK3L,GAAY+L,sBACf,OAAO,6BAAKtB,GAAZ,IAAmBkB,WAAW,EAAOD,SAAUhB,EAAOE,QAAQc,WAChE,KAAK1L,GAAYgM,mBACf,OAAO,6BAAKvB,GAAZ,IAAmBkB,WAAW,EAAOC,OAAO,IAC9C,QACE,OAAOnB,IGvBPwB,GAAoB,CACxBC,aAAc3B,GACd4B,aAAc,CACZC,mBAAoB,aACpBC,qBAAsB,aACtBC,kBAAmB,eAIVC,GAAaC,wBAAcP,IAwBzBQ,GAtB4C,SAAC,GAAkB,IAAhBjK,EAAe,EAAfA,SAAe,EAC1CuI,qBAAWc,GAAiBtB,IADc,mBACpE2B,EADoE,KAErEd,EC3BsB,SAACH,GAAD,MAAwC,CACpEmB,mBAAoB,kBAAMnB,EAAS,CAAEhF,KAAMjG,GAAY8L,uBACvDO,qBAAsB,SAACX,GAAD,OACpBT,EAAS,CACPhF,KAAMjG,GAAY+L,sBAClBnB,QAAS,CAAEc,eAEfY,kBAAmB,kBAAMrB,EAAS,CAAEhF,KAAMjG,GAAYgM,uBDoBtCV,CAF2D,MAarEoB,EAAgB,CACpBR,eACAC,aAPmB,CACnBC,mBAFEhB,EAHFgB,mBAMAC,qBAHEjB,EAFFiB,qBAMAC,kBAJElB,EADFkB,oBAWF,OACE,cAACC,GAAWI,SAAZ,CAAqBnL,MAAOkL,EAA5B,SAA4ClK,K,qBEvCjCoK,GAJC,WACd,OAAO,qBAAKpM,UAAWC,KAAQoM,OAAxB,yB,2DCmBMC,GAdwB,SAAC,GAAD,IACrC7G,EADqC,EACrCA,KACA8G,EAFqC,EAErCA,iBACAC,EAHqC,EAGrCA,QAHqC,OAKrC,wBACE3L,QAAS,SAAA4L,GAAC,OAAIF,EAAiB9G,IAC/BzF,UAAWC,KAAQyM,UACnBlK,MAAO,CAAEmK,gBAAgB,GAAD,OAAKH,IAH/B,SAKG/G,KC4DUmH,GA5CkB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAON,EAAmC,EAAnCA,iBAAkBO,EAAiB,EAAjBA,WAAiB,EAzB5D,WAAO,IAAD,EACYlL,oBAAS,GADrB,mBACfiH,EADe,KACJ6B,EADI,KAKtB,MAAO,CAAE7B,YAAWlI,OAFL,kBAAM+J,GAAc7B,KAuBLkE,GAAtBlE,EADoE,EACpEA,UAAWlI,EADyD,EACzDA,OAEbqM,EAAwBC,mBAC5B,kBACE9I,EAAcqC,KAAI,SAAC0G,EAAaxG,GAAd,OAChB,cAAC,GAAD,CACEjB,KAAMyH,EACNX,iBAAkBA,EAElBC,SA1BRW,EA0BkCD,EAzBlCE,EAyB+CP,GAtBlC,IADDO,EAAaC,QAAQF,GAExB/I,EAAY+I,GAEd,KAkBMD,EAAcxG,GA1BJ,IACvByG,EACAC,OA4BE,CAACb,EAAkBM,IAErB,OACE,qBAAK7M,UAAWC,KAAQqN,UAAxB,SACE,sBAAKtN,UAAWC,KAAQ6B,QAAxB,UACE,oBAAI9B,UAAWC,KAAQsN,YAAvB,iFAGA,mBAAGvN,UAAWC,KAAQuN,KAAtB,kFAGA,sBAAKxN,UAAWC,KAAQwN,mBAAxB,UACE,wBAAQzN,UAAWC,KAAQyN,UAAW7M,QAAS,kBAAMF,KAArD,SACE,4BACE,cAAC,KAAD,CAAiBgN,KAAMC,KAAUC,KAAK,WAGzChF,GACC,wBAAQhI,QAAS,kBAAMiM,KAAc9M,UAAWC,KAAQ6N,SAAxD,8BAKHjF,GACC,qBAAK7I,UAAWC,KAAQ8N,eAAxB,SAAyCf,U,QC/BpCgB,GAtCQ,WAAO,IAAD,EACDpM,mBAAkC,IADjC,mBACpBiL,EADoB,KACboB,EADa,KAmC3B,MAAO,CAAEpB,QAAON,iBA9BS,SAAC9G,GACxB,OAAQoH,EAAMjJ,QACZ,KAAK,EACHqK,EAAS,CAACxI,IACV,MAEF,KAAK,EACCoH,EAAMQ,QAAQ5H,IAAS,EACzBwI,EAAS,IAETA,EAAS,GAAD,oBAAKpB,GAAL,CAAYpH,KAEtB,MAEF,KAAK,EACH,IAAMiB,EAAMmG,EAAMQ,QAAQ5H,GAC1B,GAAIiB,GAAO,EAAG,CACZ,IAAMwH,EAAQ,aAAOrB,GACrBqB,EAASC,OAAOzH,EAAK,GACrBuH,EAASC,OACJ,CACL,IAAMA,EAAQ,aAAOrB,GACrBqB,EAASC,OAAO,EAAG,EAAG1I,GACtBwI,EAASC,MAOiBpB,WAhCf,kBAAMmB,EAAS,ONAvBlE,GAAuB,CAClCqE,kBAAmB,GACnBC,gBAAgB,I,SAGN7O,K,kDAAAA,E,mCAAAA,Q,KAoBZ,IOrBYA,GP0EGwK,GAXO,SAACC,EAAeC,GACpC,OAAQA,EAAOzE,MACb,KAAKjG,GAAY8O,wBACf,OAXuB,SAACrE,EAAeC,GAE3C,MAAO,CACLkE,kBAFmBlE,EAAOE,QAApBc,SAGNmD,gBAAgB,GAOPE,CAAqBtE,EAAOC,GACrC,KAAK1K,GAAYgP,gBACf,OAhCiB,SAACvE,EAAeC,GACrC,GAAoB,oBAAhBA,EAAOzE,KAA4B,CAAC,IAAD,EACTyE,EAAOE,QAA3Bc,EAD6B,EAC7BA,SAAU2B,EADmB,EACnBA,MACZuB,EAlBmB,SAC3BlD,EACA2B,GAEA,OAAqB,IAAjBA,EAAMjJ,OACDsH,EAASuD,QAAO,SAAAC,GAAO,OAAIA,EAAQ7B,MAAMQ,QAAQR,EAAM,KAAO,KAElD,IAAjBA,EAAMjJ,OACDsH,EAASuD,QAAO,SAAAC,GAAO,OAC5BA,EAAQ7B,MAAM8B,OAAM,SAAAlJ,GAAI,OAAIoH,EAAMQ,QAAQ5H,IAAS,QAGhDyF,EAMqB0D,CAAqB1D,EAAU2B,GACzD,OAAIA,EAAMjJ,OACD,CACLwK,oBACAC,gBAAgB,GAGb,CACLD,oBACAC,gBAAgB,GAGlB,OAAOpE,EAiBE4E,CAAe5E,EAAOC,GAC/B,QACE,OAAOD,I,wCQpDE6E,GAlByB,SAAC,GAIlC,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEA,OACE,wBAEEpO,QAAS,kBAAMoO,EAASF,IACxB/O,UAAS,UAAKwJ,KAAOsF,cAAZ,YACPE,IAAkBD,EAASvF,KAAO0F,oBAAsB,IAJ5D,SAOGH,GANIA,I,qBCVII,GAJF,WACX,OAAO,qBAAKnP,UAAWwJ,KAAO2F,KAAvB,kBCsBMC,GAhB6B,SAAC,GAAD,IAC1CC,EAD0C,EAC1CA,WACArN,EAF0C,EAE1CA,SACAsN,EAH0C,EAG1CA,OACAC,EAJ0C,EAI1CA,SAJ0C,OAM1C,yBACE1O,QAAS,kBAAM0O,KACfvP,UAAWwJ,KAAOsF,cAClBU,cAAaF,EAHf,UAKGD,EACArN,MCsCUyN,GA7C2B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,gBACAC,EACI,EADJA,kBAEQX,EAA6CU,EAA7CV,cAAeY,EAA8BF,EAA9BE,aAAcC,EAAgBH,EAAhBG,YAEnCZ,EAKEU,EALFV,SACAa,EAIEH,EAJFG,cACAC,EAGEJ,EAHFI,iBACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,aAGIC,EAAgBjD,mBACpB,kBCpBgC,SAClC2C,EACAZ,EACAa,EACAZ,GAEA,OAAIW,EAAahM,QATe,GAUvBgM,EAAapJ,KAAI,SAAAuI,GAAM,OAC5B,cAAC,GAAD,CACEA,OAAQA,EACRC,cAAeA,EACfC,SAAUA,GACLF,MAKTa,EAAahM,OApBiB,IAqB9BoL,EAtByB,EAyBvB,qCACG,aAAImB,MA1BgB,IA0Ba3J,KAAI,SAAC4J,EAAG1J,GACxC,IAAMqI,EAASrI,EAAM,EACrB,OACE,cAAC,GAAD,CACEqI,OAAQA,EACRC,cAAeA,EACfC,SAAUA,GACLvI,MAIX,cAAC,GAAD,IACA,cAAC,GAAD,CACEqI,OAAQc,EACRb,cAAeA,EACfC,SAAUA,OAMhBW,EAAahM,OA9CiB,IA+C9BoL,EAAgBa,EA9CFQ,EAiDZ,qCACE,cAAC,GAAD,CACEtB,OAAQ,EACRC,cAAeA,EACfC,SAAUA,IAEZ,cAAC,GAAD,IACC,aAAIkB,MAAM,IAAI3J,KAAI,SAAC4J,EAAG1J,GACrB,IAAMqI,EAASc,EAzDPQ,EAyDiC3J,EACzC,OACE,cAAC,GAAD,CACEqI,OAAQA,EACRC,cAAeA,EACfC,SAAUA,GACLvI,SAQdkJ,EAAahM,OAxEgB,IAyE5BoL,GAAiBa,EAxELQ,GAyEdrB,GA3EyB,EA8EvB,qCACE,cAAC,GAAD,CACED,OAAQ,EACRC,cAAeA,EACfC,SAAUA,IAEZ,cAAC,GAAD,IACA,cAAC,GAAD,CACEF,OAAQC,EAAgB,EACxBA,cAAeA,EACfC,SAAUA,IAGZ,cAAC,GAAD,CACEF,OAAQC,EACRA,cAAeA,EACfC,SAAUA,IAEZ,cAAC,GAAD,CACEF,OAAQC,EAAgB,EACxBA,cAAeA,EACfC,SAAUA,IAEZ,cAAC,GAAD,IACA,cAAC,GAAD,CACEF,OAAQc,EACRb,cAAeA,EACfC,SAAUA,OAKX,KDrFHqB,CAAqBV,EAAcZ,EAAea,EAAaZ,KACjE,CAACW,EAAcZ,EAAea,EAAaZ,IAE7C,OACE,qBAAKjP,UAAWwJ,KAAO+G,kBAAvB,SACE,sBAAKvQ,UAAWwJ,KAAOf,iBAAvB,UACE,cAAC,GAAD,CACE4G,WAAW,aACXE,SAAUO,EACVR,OAAO,cAET,cAAC,GAAD,CAAmBC,SAAUQ,EAAkBT,OAAO,eAAtD,SACE,sBAAMtP,UAAS,UAAKwJ,KAAOgH,QAAZ,YAAuBhH,KAAOiH,iBAE/C,qBAAKC,aAAW,kBAAkBlO,MAAO,CAAEmO,QAAS,QAApD,SACGT,IAEH,cAAC,GAAD,CAAmBX,SAAUS,EAAcV,OAAO,eAAlD,SACE,sBAAMtP,UAAS,UAAKwJ,KAAOgH,QAAZ,YAAuBhH,KAAOoH,kBAE/C,cAAC,GAAD,CACEvB,WAAW,YACXE,SAAUU,EACVX,OAAO,oB,SJ3CL9P,K,0DAAAA,E,oDAAAA,E,gCAAAA,E,2CAAAA,Q,KMLL,ICwBKA,GCXCuK,GAA8B,CACzC8G,sBAAuB,GACvBC,eAAgB,GAChB9B,cAd6B,EAe7Ba,YAf6B,EAgB7BD,aAAc,GACdmB,QAAQ,GAQGC,GAAoB,SAC/B/G,EACAC,GAMA,OAAQA,EAAOzE,MACb,KAAKjG,GAAYyR,4BACf,OAAOC,GAAwBjH,EAAOC,GACxC,KAAK1K,GAAY2R,yBACf,OAAOC,GAAsBnH,EAAOC,GACtC,KAAK1K,GAAY6R,eACf,OAAOC,GAAarH,EAAOC,GAC7B,KAAK1K,GAAY+R,oBACf,OAAOC,GAAiBvH,EAAOC,GACjC,QACE,OAAOD,IAOPqH,GAAe,SAAKrH,EAA4BC,GAAjC,oCAChBD,GADgB,IAEnB8G,QAAQ,KAEJS,GAAmB,SACvBvH,EACAC,GAFuB,oCAIpBD,GAJoB,IAKvB8G,QAAQ,KAGJG,GAA0B,SAC9BjH,EACAC,GAEA,GAAoB,gCAAhBA,EAAOzE,KAAwC,CAAC,IAC1CuJ,EAAkB/E,EAAlB+E,cADyC,EAET9E,EAAOE,QAAvC0G,EAFyC,EAEzCA,eAAgBW,EAFyB,EAEzBA,YAClB5B,EAAsB6B,KAAKC,KAAKF,EAAY7N,OAASkN,GACrDlB,EFjE0B,SAACgC,GAEnC,IADA,IAAMhC,EAAyB,GACtBiC,EAAI,EAAGA,GAAKD,EAAkBC,IACrCjC,EAAakC,KAAKD,GAEpB,OAAOjC,EE4D0BmC,CAAqBlC,GAC9CgB,EF1D8B,SACtC7B,EACA8B,EACAjB,EACA4B,GAEA,IAAMO,GACHhD,EAAgB,GAAK8B,EAClBmB,EACJjD,IAAkBa,EACd4B,EAAY7N,OACZoO,EAA8BlB,EACpC,OAAOW,EAAYS,MACjBF,EACAC,GE4C8BE,CAC5BnD,EACA8B,EACAjB,EACA4B,GAEF,OAAO,6BACFxH,GADL,IAEE4G,wBACAC,iBACAjB,cACAD,iBAGJ,OAAO3F,GAGHmH,GAAwB,SAC5BnH,EACAC,GAEA,GAAoB,6BAAhBA,EAAOzE,KACT,OAAQyE,EAAOE,QAAQgI,YACrB,IAAK,QACH,OAAO,6BAAKnI,GAAZ,IAAmB+E,cA/FI,IAgGzB,IAAK,OACH,OAAO,6BAAK/E,GAAZ,IAAmB+E,cAAe/E,EAAM4F,cAC1C,IAAK,SACH,OAAI3F,EAAOE,QAAQiI,WACV,6BAAKpI,GAAZ,IAAmB+E,cAAe9E,EAAOE,QAAQiI,aAE1CpI,EAEX,IAAK,OACH,IAAM+E,EACJ/E,EAAM+E,gBAAkB/E,EAAM4F,YAC1B5F,EAAM4F,YACN5F,EAAM+E,cAAgB,EAC5B,OAAO,6BAAK/E,GAAZ,IAAmB+E,kBACrB,IAAK,OACH,IAAMsD,EA/GiB,IAgHrBrI,EAAM+E,cACF/E,EAAM+E,cACN/E,EAAM+E,cAAgB,EAC5B,OAAO,6BAAK/E,GAAZ,IAAmB+E,cAAesD,IACpC,QACE,OAAOrI,EAGb,OAAOA,GC3EMa,GAjDQ,SAAIL,GAAJ,MAA8C,CACnE8H,kBAAmB,SAACd,EAAkBX,GAAnB,OACjBrG,EAAS,CACPhF,KAAM,8BACN2E,QAAS,CACPqH,cACAX,qBAGN0B,eAAgB,kBAAM/H,EAAS,CAAEhF,KAAMjG,GAAY6R,kBACnDG,iBAAkB,kBAAM/G,EAAS,CAAEhF,KAAMjG,GAAY+R,uBACrDzB,cAAe,kBACbrF,EAAS,CACPhF,KAAMjG,GAAY2R,yBAClB/G,QAAS,CACPgI,WAAY,YAGlBnC,aAAc,kBACZxF,EAAS,CACPhF,KAAMjG,GAAY2R,yBAClB/G,QAAS,CACPgI,WAAY,WAGlBnD,SAAU,SAACoD,GAAD,OACR5H,EAAS,CACPhF,KAAMjG,GAAY2R,yBAClB/G,QAAS,CACPgI,WAAY,SACZC,iBAGNrC,aAAc,kBACZvF,EAAS,CACPhF,KAAMjG,GAAY2R,yBAClB/G,QAAS,CACPgI,WAAY,WAGlBrC,iBAAkB,kBAChBtF,EAAS,CACPhF,KAAMjG,GAAY2R,yBAClB/G,QAAS,CACPgI,WAAY,aCSLK,GA5CO,SAAKhB,GAAmD,IAAjCX,EAAgC,uDAAP,GAAO,EACvCvG,qBAElCyG,GAAmBjH,IAHsD,mBACpE2F,EADoE,KACnDjF,EADmD,KAIrEG,EAAUE,GAAeL,GAE7BuE,EAKEU,EALFV,cACAa,EAIEH,EAJFG,YACAgB,EAGEnB,EAHFmB,sBACAjB,EAEEF,EAFFE,aACAmB,EACErB,EADFqB,OAGF1O,qBAAU,WACRuI,EAAQ2H,kBAAkBd,EAAaX,KACtC,CAACW,EAAaX,EAAgB9B,IAEjC3M,qBAAU,WACRuI,EAAQ4H,iBACR,IAAIE,EAAQC,YAAW,kBAAM/H,EAAQ4G,qBAAoB,KACzD,OAAO,WACLoB,aAAaF,MAEd,CAAC1D,IAEJ,IAAM6D,EAAmD,CACvD7D,gBACAa,cACAgB,wBACAE,SACAnB,gBAGID,EAAwC,CAC5CG,cAAelF,EAAQkF,cACvBC,iBAAkBnF,EAAQmF,iBAC1Bd,SAAUrE,EAAQqE,SAClBe,aAAcpF,EAAQoF,aACtBC,aAAcrF,EAAQqF,cAGxB,MAAO,CAAC4C,EAAuBlD,I,oBCpB3BmD,GAA2B,SAC/B7J,EACA8J,GAGA,OADe9J,EAAM+J,OACNzR,IACbwR,GAAiB,0DAsENE,GAjDuB,SAAC,GAAiB,IAAfvE,EAAc,EAAdA,QACjCwE,EAAWC,cACTC,EAA6C1E,EAA7C0E,GAAIpQ,EAAyC0L,EAAzC1L,KAAMqQ,EAAmC3E,EAAnC2E,OAAQC,EAA2B5E,EAA3B4E,OAAQzG,EAAmB6B,EAAnB7B,MAAO0G,EAAY7E,EAAZ6E,QACnCC,EAASvG,mBAAQ,kBA7CS,SAACyB,GACjC,IAAM+E,EAAyB,GAS/B,OARA/E,EAAQ7B,MAAM6G,SAAQ,SAACxG,EAAayG,GACpB,IAAVA,GACFF,EAAa3B,KAAK1N,EAAY8I,IAC9BuG,EAAa3B,KAAK1N,EAAY8I,KAE9BuG,EAAatF,OAAO,EAAG,EAAG/J,EAAY8I,OAGnC,CACL0G,WAAW,0BAAD,OAA4BH,EAAa,GAAzC,iBAAoDA,EAAa,GAAjE,SAkCiBI,CAA0BnF,KAAU,CAACA,IAC5DoF,EAAe7G,mBAAQ,kBAtBb,SAACJ,GACjB,OAAOA,EACJrG,KACC,SAAA0G,GAAW,OAAIA,EAAY6G,OAAO,GAAGC,cAAgB9G,EAAYgF,MAAM,MAExE+B,KAAK,KAiB2BC,CAAUrH,KAAQ,CAACA,IAChDsH,EAAYlH,mBAAQ,kBAfb,SAACmG,GACd,OAAIA,EAAK,GACA,MAAQA,EAEbA,GAAM,IAAMA,EAAK,IACZ,KAAOA,EAET,IAAMA,EAQmBgB,CAAOhB,KAAK,CAACA,IAE7C,OACE,cAAC,IAAD,CACElS,GAAI,CACFmT,SAAS,IAAD,OAAMrR,GACdsR,OAAO,OAAD,OAASlB,GACfnJ,MAAO,CAAE2J,WAAYV,IAEvB1Q,MAAO,CAAE+R,eAAgB,QAN3B,SAQE,sBAAKvU,UAAWC,KAAQgT,YAAazQ,MAAOgR,EAA5C,UACE,qBACEgB,YAAa,SAAA/H,GAAC,OAAIqG,GAAyBrG,EAAG8G,EAAQkB,eACtDC,WAAY,SAAAjI,GAAC,OAAIqG,GAAyBrG,EAAG8G,EAAQoB,gBACrDpT,IACEgS,EAAQoB,eACR,yDAEFlT,IAAI,kBAEN,oBAAIzB,UAAWC,KAAQ2U,YAAvB,SAAqC5R,IACrC,mBAAGhD,UAAWC,KAAQ4U,UAAtB,SAAkCV,IAClC,sBAAKnU,UAAWC,KAAQ6U,KAAxB,UACE,sBAAK9U,UAAWC,KAAQ8U,WAAxB,UACE,4BACE,cAAC,KAAD,CAAiBpH,KAAMqH,KAAiBnH,KAAK,SAE/C,sBAAM7N,UAAWC,KAAQgV,aAAzB,SAAwC3B,OAE1C,sBAAKtT,UAAWC,KAAQ8U,WAAxB,UACE,4BACE,cAAC,KAAD,CAAiBpH,KAAMuH,KAAgBrH,KAAK,SAE9C,sBAAM7N,UAAWC,KAAQgV,aAAzB,SAAwC5B,UAG5C,qBAAKrT,UAAWC,KAAQkV,QAAxB,qBACA,oBAAGnV,UAAWC,KAAQmV,KAAtB,mBAAmCtB,WChE5BuB,GA3BoB,SAAC,GAAkC,IAAhCjH,EAA+B,EAA/BA,kBAAmBvB,EAAY,EAAZA,MAAY,EACtB4F,GAC3CrE,EACA,IAHiE,mBAC5DsB,EAD4D,KAC3CC,EAD2C,KAQnE,OAHAtN,qBAAU,WACRsN,EAAkBG,kBACjB,CAACjD,IAEF,qCACE,qBAAK7M,UAAWC,KAAQqN,UAAWkC,cAAY,uBAA/C,SACGE,EAAgBmB,sBACdqB,MAAM,EAAG,IACT1L,KAAI,SAACkI,EAAShI,GAAV,OACH,cAAC,GAAD,CAAagI,QAASA,GAAcA,EAAQ1L,KAAO0D,QAGzD,8BACE,cAAC,GAAD,CACEgJ,gBAAiBA,EACjBC,kBAAmBA,UC6Cd2F,GA3CC,WAAO,IACb5J,EAAiB6J,qBAAWxJ,IAA5BL,aACAR,EAAaQ,EAAbR,SAFY,EAG4B8C,KAAxCnB,EAHY,EAGZA,MAAON,EAHK,EAGLA,iBAAkBO,EAHb,EAGaA,WAHb,EAKMvC,qBAAWP,GAAeD,IALhC,mBAKbE,EALa,KAMdW,EAxBe,SAACH,GAAD,MAAwC,CAC7DoE,eAAgB,SAAC3D,EAAsB2B,GAAvB,OACdpC,EAAS,CACPhF,KAAMjG,GAAYgP,gBAClBpE,QAAS,CACPc,WACA2B,YAGN0B,qBAAsB,SAACrD,GAAD,OACpBT,EAAS,CACPhF,KAAMjG,GAAY8O,wBAClBlE,QAAS,CACPc,SAAUA,OAWAJ,CANI,MAgBpB,OARAzI,qBAAU,WACJ6I,GAAUN,EAAQ2D,qBAAqBrD,KAC1C,CAACA,IAEJ7I,qBAAU,WACRuI,EAAQiE,eAAe3D,EAAU2B,KAChC,CAACA,EAAO3B,IAGT,sBAAKlL,UAAWC,KAAQ6B,QAAxB,UACE,cAAC,GAAD,CACE+K,MAAOA,EACPN,iBAAkBA,EAClBO,WAAYA,IAEbpB,EAAaN,OACZ,mBAAGpL,UAAWC,KAAQuV,MAAtB,sGAKA9J,EAAaP,UAGb,sBAAKnL,UAAWC,KAAQwV,iBAAxB,UACE,mBAAGzV,UAAWC,KAAQyV,YAAtB,6DAGA,cAAC,GAAD,OANF,cAAC,GAAD,CAAUtH,kBAAmBnE,EAAMmE,kBAAmBvB,MAAOA,QC/DtD,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,uC,oBCe1B8I,GARqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,UAC1C,OACE,qBAAK7V,UAAS,UAAKC,KAAQ6V,OAAb,YAAuBD,GAArC,SACE,qBAAK7V,UAAWC,KAAQ8V,gBAAiBxU,IAAKqU,EAAKnU,IAAI,sBC0B9CuU,GAvBC,WACd,OACE,sBAAKhW,UAAWC,KAAQ6B,QAAxB,UACE,oBAAI9B,UAAWC,KAAQgI,MAAvB,6EAGA,sBAAKjI,UAAWC,KAAQgW,cAAxB,UACE,cAAC,GAAD,CAAWL,IAAKM,GAAIL,UAAW5V,KAAQiW,KACvC,cAAC,GAAD,CAAWN,IAAKO,GAAIN,UAAW5V,KAAQkW,KACvC,cAAC,GAAD,CAAWP,IAAKQ,GAAIP,UAAW5V,KAAQmW,KACvC,cAAC,GAAD,CAAWR,IAAKS,GAAIR,UAAW5V,KAAQoW,KACvC,cAAC,GAAD,CAAWT,IAAKU,GAAIT,UAAW5V,KAAQqW,KACvC,cAAC,GAAD,CAAWV,IAAKW,GAAIV,UAAW5V,KAAQsW,KACvC,cAAC,GAAD,CAAWX,IAAKY,GAAIX,UAAW5V,KAAQuW,KACvC,cAAC,GAAD,CAAWZ,IAAKa,GAAIZ,UAAW5V,KAAQwW,KACvC,cAAC,GAAD,CAAWb,IAAKc,GAAIb,UAAW5V,KAAQyW,KACvC,cAAC,GAAD,CAAWd,IAAKe,GAAKd,UAAW5V,KAAQ0W,MACxC,cAAC,GAAD,CAAWf,IAAKM,GAAIL,UAAW5V,KAAQ2W,a,qBCWhCC,GArC+B,SAAC,GAAkB,IAAhB7U,EAAe,EAAfA,SACzC8U,EAAUC,cAehB,OARA1U,qBAAU,WAGR,OAFA8G,SAASjC,KAAK1E,MAAMwU,SAAW,SAExB,WACL7N,SAASjC,KAAK1E,MAAMwU,SAAW,aAEhC,IAGD,qBAAKhX,UAAWC,KAAQ6B,QAASjB,QAdhB,SAAC4L,GAClBA,EAAEwK,kBACFH,EAAQI,UAYR,SAeGlV,KnB1BM+H,GAAe,CAC1BoN,eAAgB,CACd/D,GAAI,EACJpQ,KAAM,GACNqQ,OAAQ,EACRC,OAAQ,EACRzG,MAAO,GACP0G,QAAS,CACPoB,cAAe,GACfF,aAAc,IAEhB2C,MAAO,CAAC,CAAEC,SAAU,GAAIC,UAAW,IACnCC,YAAa,IAEfpM,WAAW,EACXC,OAAO,I,SAGG5L,K,wDAAAA,E,4DAAAA,E,uDAAAA,Q,KAkBZ,IAoBegY,GApBY,SAACvN,EAAeC,GACzC,OAAQA,EAAOzE,MACb,KAAKjG,GAAYiY,2BACf,OAAO,6BAAKxN,GAAZ,IAAmBkB,WAAW,IAChC,KAAK3L,GAAYkY,6BACf,OAAO,6BACFzN,GADL,IAEEkB,WAAW,EACXgM,eAAe,6BACVjN,EAAOE,QAAQsE,SADN,IAEZ6I,YAAarN,EAAOE,QAAQmN,gBAGlC,KAAK/X,GAAYmY,0BACf,OAAO,6BAAK1N,GAAZ,IAAmBkB,WAAW,EAAOC,OAAO,IAC9C,QACE,OAAOnB,IoB9CPwB,GAAoB,CACxBxB,MAAOF,GACP4B,aAAc,CACZiM,sBAAuB,aACvBC,wBAAyB,aACzBC,qBAAsB,eAIbC,GAAiB/L,wBAAcP,IA4B7BuM,GA1B+C,SAAC,GAExD,IADLhW,EACI,EADJA,SACI,EACsBuI,qBAAWiN,GAAoBzN,IADrD,mBACGE,EADH,KAEEW,EC7BsB,SAACH,GAAD,MAAwC,CACpEmN,sBAAuB,kBACrBnN,EAAS,CAAEhF,KAAMjG,GAAYiY,8BAC/BI,wBAAyB,SAACN,EAAqB7I,GAAtB,OACvBjE,EAAS,CACPhF,KAAMjG,GAAYkY,6BAClBtN,QAAS,CAAEmN,cAAa7I,cAE5BoJ,qBAAsB,kBACpBrN,EAAS,CAAEhF,KAAMjG,GAAYmY,8BDoBf7M,CAFZ,MAaEoB,EAAgB,CACpBjC,QACA0B,aAPmB,CACnBiM,sBAFEhN,EAHFgN,sBAMAC,wBAHEjN,EAFFiN,wBAMAC,qBAJElN,EADFkN,uBAWF,OACE,cAACC,GAAe5L,SAAhB,CAAyBnL,MAAOkL,EAAhC,SACGlK,KEjCQiW,GAXK,uCAAG,WAAOpR,EAAauM,GAApB,uBAAAtM,EAAA,6DACfoR,EAAUrR,EAAG,WAAOuM,GADL,SAEErM,MAAMmR,GAFR,cAEf7Q,EAFe,gBAGFA,EAASC,OAHP,cAGff,EAHe,OAIfgR,EAAchR,EAAK4R,oBAAoBC,MAC3C,SAA0BC,GAA1B,MAA6D,OAAvBA,EAAKC,SAAStV,QAEhDuV,EAAuBhB,EAAYiB,YAAYC,QAAQ,UAAW,IAPnD,kBAQdF,GARc,4CAAH,wD,wCCkBLG,GAhBiB,SAAC,GAA6B,IAA3BrB,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC3C,OACE,qCACE,oBAAGtX,UAAWC,KAAQ0Y,SAAtB,UACGtB,EADH,IACa,sBAAMrX,UAAWC,KAAQ2Y,UAAzB,SAAqCtB,OAElD,qBAAKtX,UAAWC,KAAQ4Y,gBAAxB,SACE,qBACE7Y,UAAWC,KAAQ6Y,eACnBtW,MAAO,CAAEuW,MAAM,GAAD,OAAMzB,EAAY,IAAO,IAAzB,cCuHT0B,GA5E0B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCnC,EAAUC,cADuC,EAEvBxB,qBAAWwC,IAAnC9N,EAF+C,EAE/CA,MAAO0B,EAFwC,EAExCA,aACPD,EAAiB6J,qBAAWxJ,IAA5BL,aAH+C,EAanDzB,EAAMkN,eAPR/D,EANqD,EAMrDA,GACApQ,EAPqD,EAOrDA,KACAqQ,EARqD,EAQrDA,OACAC,EATqD,EASrDA,OACAzG,EAVqD,EAUrDA,MACAuK,EAXqD,EAWrDA,MACAG,EAZqD,EAYrDA,YAGI2B,EAAYjM,mBAAQ,kBA5CK,SAACJ,GAAD,OAC/BA,EAAMrG,KAAI,SAACf,EAAMkO,GACf,IAAIwF,EAAY,CACdC,MAAM,GAAD,OAAKhV,EAAYqB,IACtB4T,OAAO,aAAD,OAAejV,EAAYqB,KAEnC,OACE,sBAAyBjD,MAAO2W,EAAWnZ,UAAWC,KAAQqZ,SAA9D,SACG7T,EAAKsO,OAAO,GAAGC,cAAgBvO,EAAKyM,MAAM,IADlCzM,EAAOkO,MAqCU4F,CAAyB1M,KAAQ,CAACA,IAC5D2M,EAAYvM,mBAAQ,kBAvDb,SAACmG,GACd,OAAIA,EAAK,GACA,MAAQA,EAEbA,GAAM,IAAMA,EAAK,IACZ,KAAOA,EAET,IAAMA,EAgDmBgB,CAAOhB,KAAK,CAACA,IACvCqG,EAAaxM,mBAAQ,kBAjCN,SAACmK,GAAD,OACrBA,EAAM5Q,KAAI,SAAAkT,GAAI,OACZ,cAAC,GAAD,CACEpC,UAAWoC,EAAKpC,UAChBD,SAAUqC,EAAKrC,UACVqC,EAAKpC,UAAYoC,EAAKrC,aA4BEsC,CAAevC,KAAQ,CAACA,IAEzD/U,qBAAU,WACR,GAAK4W,EAEE,CACL,IAAMvK,EA9BY,SAAC0E,EAAYlI,GAAb,OACtBA,EAASkN,MAAK,SAAA1J,GAAO,OAAIA,EAAQ0E,KAAOwG,SAASxG,MA6B7ByG,CAAgBZ,EAAQvN,EAAaR,UAajDwD,GAZkB,uCAAG,WAAOA,GAAP,eAAA5H,EAAA,6DACvB6E,EAAaiM,wBADU,kBAGKK,G/ClFlC,4C+CoFUgB,GALmB,OAGf1B,EAHe,OAOrB5L,EAAakM,wBAAwBN,EAAa7I,GAP7B,gDASrB/C,EAAamM,uBATQ,yDAAH,qDAYTgC,CAAiBpL,QAf9B/C,EAAamM,yBAiBd,CAACmB,IAEJ5W,qBAAU,WACJ4H,EAAMmB,OAAOhD,QAAQC,IAAI,0CAC5B,CAAC4B,EAAMmB,QAOV,OACE,qBAAKpL,UAAWC,KAAQ6B,QAASjB,QAAS,SAAA4L,GAAC,OAAIA,EAAEwK,mBAAjD,SACE,qBAAKjX,UAAWC,KAAQ8Z,YAAxB,SACG9P,EAAMkB,UACL,cAAC,GAAD,IAEA,qCACE,mBAAGnL,UAAWC,KAAQ+Z,UAAWnZ,QAAS,SAAA4L,GAAC,OAZlC,SAACA,GAClBA,EAAEwK,kBACFH,EAAQI,SAU+C+C,CAAWxN,IAA1D,SACE,cAAC,KAAD,CAAiBkB,KAAMuM,KAASrM,KAAK,SAEvC,qBAAKtM,IAAK0I,EAAMkN,eAAe5D,QAAQoB,cAAelT,IAAI,KAC1D,oBAAIzB,UAAWC,KAAQ2U,YAAvB,SAAqC5R,IACrC,mBAAGhD,UAAWC,KAAQ4U,UAAtB,SAAkC2E,IAClC,mBAAGxZ,UAAWC,KAAQka,mBAAtB,SAA2C5C,IAC3C,sBAAKvX,UAAWC,KAAQma,qBAAxB,UACE,oBAAGpa,UAAWC,KAAQoa,cAAtB,qBAA8C/G,KAC9C,yCAAYD,QAEd,qBAAKrT,UAAWC,KAAQma,qBAAxB,SAA+ClB,IAC/C,qBAAKlZ,UAAWC,KAAQqa,gBAAxB,SAA0Cb,Y,oBC5GvCc,GAdC,WACd,IAAMrH,EAAWC,cACjB,OACE,sBAAKnT,UAAWC,KAAQqN,UAAxB,UACE,qBAAItN,UAAWC,KAAQ6U,KAAvB,uCAC4B,+BAAO5B,EAASmB,cAE5C,cAAC,IAAD,CAAMnT,GAAG,IAAIlB,UAAWC,KAAQua,KAAhC,mCCgCSC,GA3BA,WACb,IAAMvH,EAA2BC,cAC3BS,EAAaV,EAASjJ,OAASiJ,EAASjJ,MAAM2J,WAC9CR,ECnBgB,SAACsH,EAAaxH,GAEpC,OADc,IAAIyH,gBAAgBzH,EAASoB,QAC9BsG,IAAN,UAAaF,IDiBTG,CAAS,KAAM3H,GAC1B,OACE,qCACE,eAAC,IAAD,CAAQA,SAAUU,GAAcV,EAAhC,UACE,cAAC,IAAD,CAAOnS,KAAK,WAAW+Z,UAAWxQ,KAClC,cAAC,IAAD,CAAOvJ,KAAK,WAAW+Z,UAAW9E,KAClC,cAAC,IAAD,CAAOjV,KAAK,UAAU+Z,UAAWnY,IACjC,cAAC,IAAD,CAAOoY,OAAK,EAACha,KAAK,IAAI+Z,UAAWxF,KACjC,cAAC,IAAD,CAAOwF,UAAWP,QAEnB3G,GACC,cAAC,IAAD,CACE7S,KAAK,SACLiB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAgBiX,OAAQ7F,YEWvB4H,GAzCE,uCAAG,WAAOnU,GAAP,mBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZQ,EADY,gBAECA,EAASC,OAFV,cAEZf,EAFY,gBAIiB0U,QAAQC,IACzC3U,EAAK4U,QAAQ3U,IAAb,uCAAiB,WAA2B4U,GAA3B,2CAAAtU,EAAA,4DAGH,4CAFRD,EAAMuU,EAAOvU,OAIfA,EAAM,0CALO,SAOQE,MAAMF,GAPd,cAOTQ,EAPS,gBAQIA,EAASC,OARb,cAQTf,EARS,OASP6M,EAAoD7M,EAApD6M,GAAIpQ,EAAgDuD,EAAhDvD,KAAMqQ,EAA0C9M,EAA1C8M,OAAQC,EAAkC/M,EAAlC+M,OAAQzG,EAA0BtG,EAA1BsG,MAAO0G,EAAmBhN,EAAnBgN,QAAS6D,EAAU7Q,EAAV6Q,MAC1CzC,EAAgCpB,EAAhCoB,cAAeF,EAAiBlB,EAAjBkB,aACjB4G,EAAgB,CACpB1G,gBACAF,gBAEIX,EAAejH,EAAMrG,KAAI,SAACf,GAAD,OAAeA,EAAKA,KAAKzC,QAClDsY,EAAelE,EAAM5Q,KAAI,SAAC+U,GAC9B,MAAO,CACLlE,SAAUkE,EAAW7B,KAAK1W,KAC1BsU,UAAWiE,EAAWC,cAnBX,kBAsBR,CACLpI,KACApQ,OACAqQ,SACAC,SACAC,QAAS8H,EACTxO,MAAOiH,EACPsD,MAAOkE,IA7BM,4CAAjB,wDALgB,cAIZpQ,EAJY,yBAsCXA,GAtCW,4CAAH,sDCyBFuQ,GAtBH,WAAO,IACT9P,EAAiB4J,qBAAWxJ,IAA5BJ,aAcR,OAZAtJ,qBAAU,YACW,uCAAG,4BAAAyE,EAAA,6DACpB6E,EAAaC,qBADO,kBAGKoP,GpDb7B,wDoDUwB,OAGZ9P,EAHY,OAIlBS,EAAaE,qBAAqBX,GAJhB,gDAMlBS,EAAaG,oBANK,yDAAH,qDASnB4P,KACC,IAED,cAAC,EAAD,UACE,cAAC,GAAD,OCjBOC,I,cAAsB3P,wBAAc,CAC/C+M,MAAOzW,OAAOsZ,WACdvI,OAAQ/Q,OAAOC,eAmCFsZ,GA5B0C,SAAC,GAAkB,IAAhB7Z,EAAe,EAAfA,SAAe,EACrCJ,mBAAS,CAC3CmX,MAAOzW,OAAOsZ,WACdvI,OAAQ/Q,OAAOC,cAHwD,mBAClEuZ,EADkE,KACtDC,EADsD,KAKnEC,EAAqB,WACzBD,EAAc,CACZhD,MAAOzW,OAAOsZ,WACdvI,OAAQ/Q,OAAOC,eAanB,OATAF,qBAAU,WAGR,OAFAC,OAAO8G,iBAAiB,SAAU4S,GAClC1Z,OAAO8G,iBAAiB,sBAAuB4S,GACxC,WACL1Z,OAAO+G,oBAAoB,SAAU2S,GACrC1Z,OAAO+G,oBAAoB,sBAAuB2S,MAEnD,IAGD,cAACL,GAAoBxP,SAArB,CAA8BnL,MAAO8a,EAArC,SACG9Z,KC7BPsH,IAAS2S,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,gBAAzB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,cAMVjT,SAASkT,eAAe,U,mBCrB1B/c,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,cAAgB,8BAA8B,oBAAsB,oCAAoC,eAAiB,+BAA+B,KAAO,uB,mBCAnOD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,iBAAmB,kCAAkC,YAAc,6BAA6B,MAAQ,yB,mBCApMD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,oBAAoB,KAAO,mBAAmB,iBAAmB,+BAA+B,IAAM,kBAAkB,OAAS,uB,mBCA3LD,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,iBAAmB,0CAA0C,QAAU,iCAAiC,YAAc,qCAAqC,aAAe,wC,mBCA3PD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,MAAQ,2BAA2B,cAAgB,mCAAmC,MAAQ,2BAA2B,WAAa,kC,mBCArMD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,MAAQ,2BAA2B,cAAgB,mCAAmC,MAAQ,2BAA2B,WAAa,kC,mBCArMD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,cAAgB,qCAAqC,MAAQ,6BAA6B,WAAa,oC,mBCAxKD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,QAAU,uBAAuB,MAAQ,qBAAqB,WAAa,0BAA0B,iBAAmB,kC,mBCA3KD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,oBAAsB,6C,mBCA7FD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,UAAY,yBAAyB,gBAAkB,+BAA+B,eAAiB,gC,mBCA5JD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,mC,mBCA3ED,EAAOC,QAAU,CAAC,KAAO,oBAAoB,SAAW,0B,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,wB,mBCA7FD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,mBCAjED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,+B,mBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B","file":"static/js/main.1b2f6c71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Gallery_Wrapper__1YOsz\",\"Title\":\"Gallery_Title__1foUO\",\"GridContainer\":\"Gallery_GridContainer__3ljHb\",\"Center\":\"Gallery_Center__3kFBB\",\"p1\":\"Gallery_p1__3hbGX\",\"p2\":\"Gallery_p2__1qiNb\",\"p3\":\"Gallery_p3__3gaoV\",\"p4\":\"Gallery_p4__1sIqP\",\"p5\":\"Gallery_p5__3cXYX\",\"p6\":\"Gallery_p6__RHZvv\",\"p7\":\"Gallery_p7__3vAj2\",\"p8\":\"Gallery_p8__3Rj-F\",\"p9\":\"Gallery_p9__KJWyj\",\"p10\":\"Gallery_p10__3NwLG\",\"p11\":\"Gallery_p11__jptF4\",\"ResponsiveImage\":\"Gallery_ResponsiveImage__3HYaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2hWH0\",\"load6\":\"Spinner_load6__3TF0d\",\"round\":\"Spinner_round__1q8Ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterBtn\":\"FilterButton_FilterBtn__1_k8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dots\":\"Dots_Dots__1wekB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"RouteModal_Wrapper__cXFsS\",\"Close\":\"RouteModal_Close__3HAhV\",\"CloseIcon\":\"RouteModal_CloseIcon__w-4jU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Contact_Wrapper__271ZE\",\"ModalContentWrapper\":\"Contact_ModalContentWrapper__VT88d\",\"ModalContentTitle\":\"Contact_ModalContentTitle__39aFb\",\"ModalContentData\":\"Contact_ModalContentData__2G-Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"PokemonDetails_Wrapper__29HVp\",\"DetailsCard\":\"PokemonDetails_DetailsCard__3SmDl\",\"PokemonName\":\"PokemonDetails_PokemonName__3bWxG\",\"PokemonId\":\"PokemonDetails_PokemonId__3Vrpu\",\"PokemonDescription\":\"PokemonDetails_PokemonDescription__UjV2-\",\"PokemonInfoContainer\":\"PokemonDetails_PokemonInfoContainer__3-lrL\",\"PokemonWeight\":\"PokemonDetails_PokemonWeight__1-NI2\",\"SkillsContainer\":\"PokemonDetails_SkillsContainer__2cVVt\",\"closeIcon\":\"PokemonDetails_closeIcon__1dt9-\",\"SpanType\":\"PokemonDetails_SpanType__3hUuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonCard\":\"PokemonCard_PokemonCard__yxL4p\",\"PokemonName\":\"PokemonCard_PokemonName__KI4_R\",\"PokemonId\":\"PokemonCard_PokemonId__V0-rU\",\"Info\":\"PokemonCard_Info__u7EkI\",\"WeightHeight\":\"PokemonCard_WeightHeight__1khBo\",\"Type\":\"PokemonCard_Type__1Fdd1\",\"Details\":\"PokemonCard_Details__2zD1r\",\"DetailInfo\":\"PokemonCard_DetailInfo__2xzZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__2pF71\",\"Wrapper\":\"Filter_Wrapper__3HK2v\",\"FilterTitle\":\"Filter_FilterTitle__1xZT6\",\"Note\":\"Filter_Note__2P3E4\",\"ToggleBtn\":\"Filter_ToggleBtn__1jWEP\",\"ActionBtnContainer\":\"Filter_ActionBtnContainer__3gyf0\",\"ResetBtn\":\"Filter_ResetBtn__FAIPQ\",\"ButtonsWrapper\":\"Filter_ButtonsWrapper__1cN2v\"};","interface IState {\r\n  data: IDataFromForm;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  data: {\r\n    name: '',\r\n    lastName: '',\r\n    username: '',\r\n    email: '',\r\n    pesel: 111111111,\r\n    zipCode: '',\r\n    city: '',\r\n    birthDate: '',\r\n  },\r\n};\r\n\r\nexport enum ActionTypes {\r\n  SET_DATA = 'SET_DATA',\r\n}\r\n\r\nexport type Actions = {\r\n  type: 'SET_DATA';\r\n  payload: {\r\n    data: IDataFromForm;\r\n  };\r\n};\r\n\r\nconst setDataFromForm = (state: IState, action: Actions) => {\r\n  const { data } = action.payload;\r\n  return {\r\n    data,\r\n  };\r\n};\r\n\r\nconst filterReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_DATA:\r\n      return setDataFromForm(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { useLayoutEffect, useRef } from 'react';\r\n\r\nimport classes from './Footer.module.scss';\r\n\r\ninterface IProps {\r\n  setFooterHeight: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\nconst Footer: React.FC<IProps> = ({ setFooterHeight }) => {\r\n  const targetRef: React.MutableRefObject<null | HTMLDivElement> = useRef(null);\r\n  useLayoutEffect(() => {\r\n    if (targetRef.current) {\r\n      setFooterHeight(targetRef.current.offsetHeight);\r\n    }\r\n  }, [setFooterHeight]);\r\n  return (\r\n    <div className={classes.FooterContainer} ref={targetRef}>\r\n      <div className={classes.FooterWrapper}>\r\n        <div className={classes.CopyrightsContainer}>Copyright © 2021</div>\r\n        <div className={classes.LinksContainer}>\r\n          <a href='/' className={classes.Link}>\r\n            Polityka prywatności\r\n          </a>\r\n          <a href='/' className={classes.Link}>\r\n            Mapa strony\r\n          </a>\r\n          <a href='/' className={classes.Link}>\r\n            Cookies\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import classes from './Hamburger.module.scss';\r\n\r\ninterface IProps {\r\n  isOpen: boolean;\r\n  toggle: () => void;\r\n}\r\n\r\nconst Hamburger: React.FC<IProps> = ({ isOpen, toggle }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className={\r\n          isOpen\r\n            ? `${classes.Hamburger} ${classes.HamburgerOpen}`\r\n            : classes.Hamburger\r\n        }\r\n        onClick={() => toggle()}\r\n      >\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import { Link } from 'react-router-dom';\r\nimport classes from './SingleLink.module.scss';\r\n\r\ninterface IProps {\r\n  path: string;\r\n  value: string;\r\n  toggle: () => void;\r\n}\r\n\r\nconst SingleLink: React.FC<IProps> = ({ path, value, toggle }) => {\r\n  return (\r\n    <li className={classes.ListItem}>\r\n      <Link to={path} className={classes.Link} onClick={() => toggle()}>\r\n        {value}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SingleLink;\r\n","import SingleLink from '../SingleLink/SingleLink';\r\nimport classes from './Links.module.scss';\r\n\r\ninterface IProps {\r\n  isOpen: boolean;\r\n  toggle: () => void;\r\n}\r\n\r\nconst Links: React.FC<IProps> = ({ isOpen, toggle }) => {\r\n  return (\r\n    <div\r\n      className={isOpen ? `${classes.List} ${classes.ListOpen}` : classes.List}\r\n    >\r\n      <SingleLink path='/' value='Pokedex' toggle={toggle} />\r\n      <SingleLink path='/mybest' value='MyBest' toggle={toggle} />\r\n      <SingleLink path='/gallery' value='Gallery' toggle={toggle} />\r\n      <SingleLink path='/contact' value='Contact' toggle={toggle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","export default __webpack_public_path__ + \"static/media/Pokemon-LOGO.5974b032.png\";","import PokemonLogo from '../../../assets/images/Pokemon-LOGO.png';\r\nimport classes from './Logo.module.scss';\r\n\r\nconst Logo: React.FC = () => {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <img src={PokemonLogo} alt='Page Logo Title' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import Hamburger from './Hamburger/Hamburger';\r\nimport { useLayoutEffect, useState, useRef } from 'react';\r\n\r\nimport Links from './Links/Links';\r\nimport Logo from './Logo/Logo';\r\n\r\nimport classes from './Navbar.module.scss';\r\n\r\ninterface IProps {\r\n  setNavbarHeight: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst Navbar: React.FC<IProps> = ({ setNavbarHeight }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const targetRef: React.MutableRefObject<null | HTMLDivElement> = useRef(null);\r\n  useLayoutEffect(() => {\r\n    if (targetRef.current) {\r\n      setNavbarHeight(targetRef.current.offsetHeight);\r\n    }\r\n  }, [setNavbarHeight]);\r\n\r\n  return (\r\n    <div className={classes.Wrapper} ref={targetRef}>\r\n      <Logo />\r\n      <Links isOpen={isOpen} toggle={toggle} />\r\n      <Hamburger isOpen={isOpen} toggle={toggle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport Footer from '../Footer/Footer';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport classes from './Layout.module.scss';\r\n\r\nconst Layout: React.FC<React.ReactNode> = ({ children }) => {\r\n  const [navbarHeight, setNavbarHeight] = useState(0);\r\n  const [footerHeight, setFooterHeight] = useState(0);\r\n  const [childrenHeight, setChildrenHeight] = useState(0);\r\n  useEffect(() => {\r\n    setChildrenHeight(window.innerHeight - navbarHeight - footerHeight);\r\n  }, [navbarHeight, footerHeight]);\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <Navbar setNavbarHeight={setNavbarHeight} />\r\n      <div\r\n        style={{ minHeight: `${childrenHeight}px` }}\r\n        // style={{ minHeight: `${window.innerHeight - 200}px` }}\r\n        className={classes.InnerWrapper}\r\n      >\r\n        {children}\r\n      </div>\r\n      <Footer setFooterHeight={setFooterHeight} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nconst BestPokemons = () => {\r\n  return <div>BEST POKEMONS - SECTION - WORK IN PROGRESS...</div>;\r\n};\r\n\r\nexport default BestPokemons;\r\n","import * as yup from 'yup';\r\n\r\nconst strinRegex = /^[a-zA-Z\\s'-]+$/;\r\nconst zipCodeRegExp = /[0-9]{2}-[0-9]{3}/;\r\n\r\nexport const schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('This field is required')\r\n    .min(3, 'Minimum 3 letters')\r\n    .max(255, 'Maximum 255 letters')\r\n    .matches(strinRegex, 'Invalid name'),\r\n  lastName: yup\r\n    .string()\r\n    .required('This field is required')\r\n    .min(3, 'Minimum 3 letters')\r\n    .max(255, 'Maximum 255 letters')\r\n    .matches(strinRegex, 'Invalid surname'),\r\n  username: yup\r\n    .string()\r\n    .required('This field is required')\r\n    .min(3, 'Minimum 3 letters')\r\n    .max(255, 'Maximum 255 letters'),\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email address')\r\n    .required('This field is required'),\r\n  pesel: yup\r\n    .number()\r\n    .required('This field is required')\r\n    .test('len', 'Number must be exactly 11 digits', val => {\r\n      if (val) return val.toString().length === 11;\r\n      return false;\r\n    })\r\n    .typeError('This must be a number!'),\r\n  zipCode: yup\r\n    .string()\r\n    .required('This field is required')\r\n    .matches(zipCodeRegExp, 'Invalid ZIP-code')\r\n    .length(6, 'Invalid ZIP-code'),\r\n  city: yup.string().required('This field is required'),\r\n  birthDate: yup.string().required('This field is required'),\r\n  agree: yup\r\n    .bool()\r\n    .required('The terms and conditions must be accepted.')\r\n    .oneOf([true], 'Accept Terms & Conditions is required'),\r\n});\r\n","export const URL_ALL_POKEMONS =\r\n  'https://pokeapi.co/api/v2/pokemon?offset=0&limit=500';\r\nexport const URL_POKEMON_DESCRIPTION =\r\n  'https://pokeapi.co/api/v2/pokemon-species';\r\n\r\nexport const POKEMON_TYPES: AvailavlePokemonTypes[] = [\r\n  'normal',\r\n  'fighting',\r\n  'flying',\r\n  'poison',\r\n  'ground',\r\n  'rock',\r\n  'bug',\r\n  'ghost',\r\n  'steel',\r\n  'fire',\r\n  'water',\r\n  'grass',\r\n  'electric',\r\n  'psychic',\r\n  'ice',\r\n  'dragon',\r\n  'fairy',\r\n  'dark',\r\n];\r\n\r\ninterface ITypes {\r\n  [key: string]: string;\r\n}\r\n\r\nexport const TYPE_COLORS: ITypes = {\r\n  poison: '#C68CC6',\r\n  grass: '#AEDE96',\r\n  fire: '#F6B282',\r\n  flying: '#CABCF6',\r\n  water: '#A4BCF6',\r\n  bug: '#CAD479',\r\n  normal: '#CACAAE',\r\n  electric: '#FAE282',\r\n  ground: '#ECD9A4',\r\n  fairy: '#F4C1CD',\r\n  fighting: '#D9827E',\r\n  psychic: '#FA9AB7',\r\n  rock: '#D4C687',\r\n  ghost: '#A99AC1',\r\n  ice: '#C1E7E7',\r\n  steel: '#D4D4E2',\r\n  dragon: '#A886F9',\r\n  dark: '#A89990',\r\n};\r\n\r\nexport const cityData = ['Warszawa', 'Wrocław', 'Kraków', 'Poznań', 'Gdańsk'];\r\n","import classes from './SingleInput.module.scss';\r\n\r\ntype availableInputTypes = 'text' | 'number' | 'date' | 'checkbox';\r\n\r\ninterface IProps {\r\n  name: string;\r\n  type: availableInputTypes;\r\n  errors: any;\r\n  register: any;\r\n  placeholder?: string;\r\n  defaultValue?: string;\r\n  required: boolean;\r\n  label: string;\r\n  maxDate?: any;\r\n}\r\n\r\nconst SingleInput: React.FC<IProps> = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  defaultValue,\r\n  errors,\r\n  register,\r\n  required,\r\n  label,\r\n  maxDate,\r\n}) => {\r\n  return (\r\n    <div className={classes.InputGroup}>\r\n      <label className={required ? classes.LabelRequired : classes.Label}>\r\n        {label}:\r\n      </label>\r\n      <input\r\n        className={classes.Input}\r\n        ref={register}\r\n        name={name}\r\n        type={type}\r\n        defaultValue={defaultValue ? defaultValue : ''}\r\n        placeholder={placeholder ? placeholder : ''}\r\n        max={maxDate ? maxDate : null}\r\n      />\r\n      {errors[name] && (\r\n        <p className={classes.ErrorField}>{errors[name]?.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleInput;\r\n","import classes from './SelectInput.module.scss';\r\n\r\ninterface IProps {\r\n  data: string[];\r\n  name: string;\r\n  register: any;\r\n  errors: any;\r\n  required: boolean;\r\n  label: string;\r\n  placeholder?: string;\r\n  defaultValue?: string;\r\n}\r\n\r\nconst SelectInput: React.FC<IProps> = ({\r\n  data,\r\n  name,\r\n  register,\r\n  errors,\r\n  required,\r\n  label,\r\n  placeholder,\r\n  defaultValue,\r\n}) => {\r\n  return (\r\n    <div className={classes.InputGroup}>\r\n      <label className={required ? classes.LabelRequired : classes.Label}>\r\n        {label}:\r\n      </label>\r\n      <select\r\n        className={classes.Input}\r\n        ref={register}\r\n        name={name}\r\n        defaultValue={defaultValue ? defaultValue : ''}\r\n        placeholder={placeholder ? placeholder : ''}\r\n      >\r\n        <option value='' />\r\n        {data.map((item, idx) => (\r\n          <option value={item} key={item + idx}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {errors[name] && (\r\n        <p className={classes.ErrorField}>{errors[name]?.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import classes from './CheckboxInput.module.scss';\r\n\r\ntype availableInputTypes = 'checkbox';\r\n\r\ninterface IProps {\r\n  name: string;\r\n  type: availableInputTypes;\r\n  errors: any;\r\n  register: any;\r\n  required: boolean;\r\n}\r\n\r\nconst CheckboxInput: React.FC<IProps> = ({\r\n  name,\r\n  type,\r\n  errors,\r\n  register,\r\n  required,\r\n}) => {\r\n  return (\r\n    <div className={classes.InputGroup}>\r\n      <label className={required ? classes.LabelRequired : classes.Label}>\r\n        <input\r\n          className={classes.Input}\r\n          ref={register}\r\n          name={name}\r\n          type={type}\r\n        />\r\n        I agree Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n        Obcaecati eveniet officiis possimus accusantium similique! Nemo, vero\r\n        expedita? Qui atque facilis architecto, eum sed, distinctio ad officiis\r\n        expedita accusamus fugit voluptas! Incidunt ipsam quia suscipit\r\n        praesentium omnis? Nemo ab dolore magni, corrupti et quos vero ad\r\n        inventore, dignissimos, debitis voluptas quam.\r\n      </label>\r\n      {errors[name] && (\r\n        <p className={classes.ErrorField}>{errors[name]?.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","interface IData {\r\n  [key: string]: any;\r\n}\r\n\r\nexport const postData = async (url: string, data: IData) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  const dataFromResponse = await response.json();\r\n  return dataFromResponse;\r\n};\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { schema } from './validationSchema';\r\n\r\nimport classes from './Form.module.scss';\r\n\r\nimport { cityData } from '../../../constans/constans';\r\n\r\nimport SingleInput from './SingleInput/SingleInput';\r\nimport SelectInput from './SelectInput/SelectInput';\r\nimport CheckboxInput from './CheckboxInput/CheckboxInput';\r\nimport { postData } from '../../../requestMethods/postData';\r\n\r\ninterface IDataFromForm {\r\n  name: string;\r\n  lastName: string;\r\n  username: string;\r\n  email: string;\r\n  pesel: number;\r\n  zipCode: string;\r\n  city: string;\r\n  birthDate: string;\r\n}\r\n\r\ninterface IProps {\r\n  onSuccessPostRequest: (data: IDataFromForm) => void;\r\n}\r\n\r\nconst Form: React.FC<IProps> = ({ onSuccessPostRequest }) => {\r\n  const { register, handleSubmit, errors, setValue } = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: 'all',\r\n  });\r\n\r\n  const resetForm = () => {\r\n    setValue('name', '');\r\n    setValue('lastName', '');\r\n    setValue('username', '');\r\n    setValue('email', '');\r\n    setValue('pesel', '');\r\n    setValue('zipCode', '');\r\n    setValue('city', '');\r\n    setValue('birthDate', '');\r\n    setValue('agree', '');\r\n  };\r\n\r\n  const onSubmit = (data: IDataFromForm) => {\r\n    postData('https://jsonplaceholder.typicode.com/posts/', data).then(() => {\r\n      console.log(data, 'Your data has been send successfully!');\r\n      onSuccessPostRequest(data);\r\n    });\r\n    resetForm();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className={classes.Title}>Contact Form</h2>\r\n      <form className={classes.Form} onSubmit={handleSubmit(onSubmit)}>\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='name'\r\n          type='text'\r\n          required={true}\r\n          label='First name'\r\n          placeholder='First name...'\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='lastName'\r\n          type='text'\r\n          required={true}\r\n          label='Last name'\r\n          placeholder='Last name...'\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='username'\r\n          type='text'\r\n          required={true}\r\n          label='Username'\r\n          placeholder='Username...'\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='email'\r\n          type='text'\r\n          required={true}\r\n          label='Email'\r\n          placeholder='Email...'\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='pesel'\r\n          type='number'\r\n          required={true}\r\n          label='Pesel Number'\r\n          placeholder='Pesel...'\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='birthDate'\r\n          type='date'\r\n          required={true}\r\n          label='Birth Date'\r\n          placeholder='dd.mm.rrrr'\r\n          maxDate={new Date().toISOString().substring(0, 10)}\r\n        />\r\n        <SingleInput\r\n          register={register}\r\n          errors={errors}\r\n          name='zipCode'\r\n          type='text'\r\n          required={true}\r\n          label='ZIP Code'\r\n          placeholder='_ _ - _ _ _'\r\n        />\r\n        <SelectInput\r\n          data={cityData}\r\n          register={register}\r\n          errors={errors}\r\n          name='city'\r\n          required={true}\r\n          label='City'\r\n          placeholder='City...'\r\n        />\r\n        <CheckboxInput\r\n          register={register}\r\n          errors={errors}\r\n          name='agree'\r\n          type='checkbox'\r\n          required={true}\r\n        />\r\n\r\n        <div className={classes.ButtonsContainer}>\r\n          <button\r\n            type='button'\r\n            onClick={() => handleCancel()}\r\n            className={`${classes.Btn} ${classes.Cancel}`}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button type='submit' className={classes.Btn}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './Modal.module.scss';\r\n\r\nexport const useModalLogic = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const toggleVisibility = () => setIsVisible(!isVisible);\r\n\r\n  return { isVisible, toggleVisibility };\r\n};\r\n\r\ninterface IProps {\r\n  isVisible: boolean;\r\n  toggleVisibility: () => void;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Modal: React.FC<IProps> = ({ isVisible, toggleVisibility, children }) => {\r\n  const handleEscape = useCallback(\r\n    event => {\r\n      if (event.keyCode === 27) {\r\n        toggleVisibility();\r\n      }\r\n    },\r\n    [toggleVisibility]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isVisible) document.addEventListener('keydown', handleEscape, false);\r\n    return () => document.removeEventListener('keydown', handleEscape, false);\r\n  }, [handleEscape, isVisible]);\r\n\r\n  return isVisible\r\n    ? ReactDOM.createPortal(\r\n        <>\r\n          <div\r\n            className={styles.Overlay}\r\n            onClick={() => toggleVisibility()}\r\n          ></div>\r\n          <div className={styles.Wrapper}>\r\n            <div className={styles.Modal}>\r\n              <div className={styles.ModalClose}>\r\n                <button\r\n                  type='button'\r\n                  className={styles.ModalCloseButton}\r\n                  data-dismiss='modal'\r\n                  aria-label='Close'\r\n                  onClick={() => toggleVisibility()}\r\n                >\r\n                  <span aria-hidden='true'>&times;</span>\r\n                </button>\r\n              </div>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </>,\r\n        document.body\r\n      )\r\n    : null;\r\n};\r\n\r\nexport default Modal;\r\n","export interface IState {\r\n  pokemons: IPokemon[];\r\n  isLoading: boolean;\r\n  error: boolean;\r\n}\r\n\r\nexport const initialState = {\r\n  pokemons: [],\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport enum ActionTypes {\r\n  FETCHING_DATA_START = 'FETCHING_DATA_START',\r\n  FETCHING_DATA_SUCCESS = 'FETCHING_DATA_SUCCESS',\r\n  FETCHING_DATA_FAIL = 'FETCHING_DATA_FAIL',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'FETCHING_DATA_START';\r\n    }\r\n  | {\r\n      type: 'FETCHING_DATA_SUCCESS';\r\n      payload: { pokemons: IPokemon[] };\r\n    }\r\n  | {\r\n      type: 'FETCHING_DATA_FAIL';\r\n    };\r\n\r\nconst pokemonsReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCHING_DATA_START:\r\n      return { ...state, isLoading: true };\r\n    case ActionTypes.FETCHING_DATA_SUCCESS:\r\n      return { ...state, isLoading: false, pokemons: action.payload.pokemons };\r\n    case ActionTypes.FETCHING_DATA_FAIL:\r\n      return { ...state, isLoading: false, error: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pokemonsReducer;\r\n","import React, { useReducer } from 'react';\r\nimport Form from './Form/Form';\r\nimport classes from './Contact.module.scss';\r\nimport Modal, { useModalLogic } from '../UI/Modal/Modal';\r\nimport formDataReducer, {\r\n  Actions,\r\n  ActionTypes,\r\n  initialState,\r\n} from '../../reducers/formDataReducer';\r\n\r\nconst actionsFactory = (dispatch: React.Dispatch<Actions>) => ({\r\n  setFormData: (data: IDataFromForm) =>\r\n    dispatch({\r\n      type: ActionTypes.SET_DATA,\r\n      payload: {\r\n        data,\r\n      },\r\n    }),\r\n});\r\n\r\nconst Contact = () => {\r\n  const [state, dispatch] = useReducer(formDataReducer, initialState);\r\n  const {\r\n    name,\r\n    lastName,\r\n    username,\r\n    email,\r\n    pesel,\r\n    zipCode,\r\n    city,\r\n    birthDate,\r\n  } = state.data;\r\n  const { isVisible, toggleVisibility } = useModalLogic();\r\n  const actions = actionsFactory(dispatch);\r\n\r\n  const onSuccessPostRequest = (data: IDataFromForm) => {\r\n    toggleVisibility();\r\n    actions.setFormData(data);\r\n  };\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <Form onSuccessPostRequest={onSuccessPostRequest} />\r\n      <Modal isVisible={isVisible} toggleVisibility={toggleVisibility}>\r\n        <div className={classes.ModalContentWrapper}>\r\n          <p className={classes.ModalContentTitle}>\r\n            Your data has been send successfully!\r\n          </p>\r\n          <p className={classes.ModalContentData}>Name: {name}</p>\r\n          <p className={classes.ModalContentData}>Surname: {lastName}</p>\r\n          <p className={classes.ModalContentData}>Username: {username}</p>\r\n          <p className={classes.ModalContentData}>Email: {email}</p>\r\n          <p className={classes.ModalContentData}>Pesel: {pesel}</p>\r\n          <p className={classes.ModalContentData}>Birth date: {birthDate}</p>\r\n          <p className={classes.ModalContentData}>ZIP code: {zipCode}</p>\r\n          <p className={classes.ModalContentData}>City: {city}</p>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","interface IState {\r\n  pokemonsToDisplay: IPokemon[];\r\n  isFilterActive: boolean;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  pokemonsToDisplay: [],\r\n  isFilterActive: false,\r\n};\r\n\r\nexport enum ActionTypes {\r\n  SET_POKEMONS_TO_DISPLAY = 'SET_POKEMONS_TO_DISPLAY',\r\n  FILTER_POKEMONS = 'FILTER_POKEMONS',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'FILTER_POKEMONS';\r\n      payload: {\r\n        pokemons: IPokemon[];\r\n        types: AvailavlePokemonTypes[];\r\n      };\r\n    }\r\n  | {\r\n      type: 'SET_POKEMONS_TO_DISPLAY';\r\n      payload: {\r\n        pokemons: IPokemon[];\r\n      };\r\n    };\r\n\r\nconst filterPokemonsByType = (\r\n  pokemons: IPokemon[],\r\n  types: AvailavlePokemonTypes[]\r\n) => {\r\n  if (types.length === 1) {\r\n    return pokemons.filter(pokemon => pokemon.types.indexOf(types[0]) >= 0);\r\n  }\r\n  if (types.length === 2) {\r\n    return pokemons.filter(pokemon =>\r\n      pokemon.types.every(type => types.indexOf(type) >= 0)\r\n    );\r\n  }\r\n  return pokemons;\r\n};\r\n\r\nconst filterPokemons = (state: IState, action: Actions) => {\r\n  if (action.type === 'FILTER_POKEMONS') {\r\n    const { pokemons, types } = action.payload;\r\n    const pokemonsToDisplay = filterPokemonsByType(pokemons, types);\r\n    if (types.length) {\r\n      return {\r\n        pokemonsToDisplay,\r\n        isFilterActive: true,\r\n      };\r\n    }\r\n    return {\r\n      pokemonsToDisplay,\r\n      isFilterActive: false,\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nconst setPokemonsToDisplay = (state: IState, action: Actions) => {\r\n  const { pokemons } = action.payload;\r\n  return {\r\n    pokemonsToDisplay: pokemons,\r\n    isFilterActive: false,\r\n  };\r\n};\r\n\r\nconst filterReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_POKEMONS_TO_DISPLAY:\r\n      return setPokemonsToDisplay(state, action);\r\n    case ActionTypes.FILTER_POKEMONS:\r\n      return filterPokemons(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { createContext, useReducer } from 'react';\r\nimport pokemonsReducer, {\r\n  IState,\r\n  initialState,\r\n} from '../reducer/pokemonReducer';\r\nimport { actionsFactory } from './actionsFactory';\r\n\r\nexport interface IContext {\r\n  pokedexState: IState;\r\n  fetchActions: {\r\n    fetchPokemonsStart: () => void;\r\n    fetchPokemonsSuccess: (pokemons: IPokemon[]) => void;\r\n    fetchPokemonsFail: () => void;\r\n  };\r\n}\r\n\r\nconst initCtx: IContext = {\r\n  pokedexState: initialState,\r\n  fetchActions: {\r\n    fetchPokemonsStart: () => {},\r\n    fetchPokemonsSuccess: () => {},\r\n    fetchPokemonsFail: () => {},\r\n  },\r\n};\r\n\r\nexport const pokedexCtx = createContext(initCtx);\r\n\r\nconst PokemonsContextProvider: React.FC<React.ReactNode> = ({ children }) => {\r\n  const [pokedexState, dispatch] = useReducer(pokemonsReducer, initialState);\r\n  const actions = actionsFactory(dispatch);\r\n  const {\r\n    fetchPokemonsStart,\r\n    fetchPokemonsSuccess,\r\n    fetchPokemonsFail,\r\n  } = actions;\r\n  const fetchActions = {\r\n    fetchPokemonsStart,\r\n    fetchPokemonsSuccess,\r\n    fetchPokemonsFail,\r\n  };\r\n  const providerValue = {\r\n    pokedexState,\r\n    fetchActions,\r\n  };\r\n  return (\r\n    <pokedexCtx.Provider value={providerValue}>{children}</pokedexCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default PokemonsContextProvider;\r\n","import { Actions, ActionTypes } from '../reducer/pokemonReducer';\r\n\r\nexport const actionsFactory = (dispatch: React.Dispatch<Actions>) => ({\r\n  fetchPokemonsStart: () => dispatch({ type: ActionTypes.FETCHING_DATA_START }),\r\n  fetchPokemonsSuccess: (pokemons: IPokemon[]) =>\r\n    dispatch({\r\n      type: ActionTypes.FETCHING_DATA_SUCCESS,\r\n      payload: { pokemons },\r\n    }),\r\n  fetchPokemonsFail: () => dispatch({ type: ActionTypes.FETCHING_DATA_FAIL }),\r\n});\r\n","import classes from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n  return <div className={classes.Loader}>Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport classes from './FilterButton.module.scss';\r\n\r\ninterface IProps {\r\n  type: AvailavlePokemonTypes;\r\n  bgColor: string;\r\n  handleTypeChange: (type: AvailavlePokemonTypes) => void;\r\n}\r\nconst FilterButton: React.FC<IProps> = ({\r\n  type,\r\n  handleTypeChange,\r\n  bgColor,\r\n}) => (\r\n  <button\r\n    onClick={e => handleTypeChange(type)}\r\n    className={classes.FilterBtn}\r\n    style={{ backgroundColor: `${bgColor}` }}\r\n  >\r\n    {type}\r\n  </button>\r\n);\r\n\r\nexport default FilterButton;\r\n","import { useState, useMemo } from 'react';\r\nimport classes from './Filter.module.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { POKEMON_TYPES, TYPE_COLORS } from '../../../constans/constans';\r\nimport FilterButton from '../FilterButton/FilterButton';\r\n\r\nconst useToggle = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const toggle = () => setIsVisible(!isVisible);\r\n\r\n  return { isVisible, toggle };\r\n};\r\n\r\nconst setButtonBGColor = (\r\n  btnType: AvailavlePokemonTypes,\r\n  currentTypes: AvailavlePokemonTypes[]\r\n) => {\r\n  const idx = currentTypes.indexOf(btnType);\r\n  if (idx !== -1) {\r\n    return TYPE_COLORS[btnType];\r\n  }\r\n  return '';\r\n};\r\n\r\ninterface IProps {\r\n  types: AvailavlePokemonTypes[];\r\n  handleTypeChange: (type: AvailavlePokemonTypes) => void;\r\n  resetTypes: () => void;\r\n}\r\n\r\nconst Filter: React.FC<IProps> = ({ types, handleTypeChange, resetTypes }) => {\r\n  const { isVisible, toggle } = useToggle();\r\n\r\n  const filterButtonsToRender = useMemo(\r\n    () =>\r\n      POKEMON_TYPES.map((pokemonType, idx) => (\r\n        <FilterButton\r\n          type={pokemonType}\r\n          handleTypeChange={handleTypeChange}\r\n          key={pokemonType + idx}\r\n          bgColor={setButtonBGColor(pokemonType, types)}\r\n        />\r\n      )),\r\n    [handleTypeChange, types]\r\n  );\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Wrapper}>\r\n        <h2 className={classes.FilterTitle}>\r\n          Discover your favorite Pokemon species by selecting specific types!\r\n        </h2>\r\n        <p className={classes.Note}>\r\n          Please note, that maximum of two types can be chosen simultaneously.\r\n        </p>\r\n        <div className={classes.ActionBtnContainer}>\r\n          <button className={classes.ToggleBtn} onClick={() => toggle()}>\r\n            <i>\r\n              <FontAwesomeIcon icon={faFilter} size='2x' />\r\n            </i>\r\n          </button>\r\n          {isVisible && (\r\n            <button onClick={() => resetTypes()} className={classes.ResetBtn}>\r\n              clear filters\r\n            </button>\r\n          )}\r\n        </div>\r\n        {isVisible && (\r\n          <div className={classes.ButtonsWrapper}>{filterButtonsToRender}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\r\n\r\nconst useTypeChanger = () => {\r\n  const [types, setTypes] = useState<AvailavlePokemonTypes[]>([]);\r\n\r\n  const resetTypes = () => setTypes([]);\r\n\r\n  const handleTypeChange = (type: AvailavlePokemonTypes) => {\r\n    switch (types.length) {\r\n      case 0: {\r\n        setTypes([type]);\r\n        break;\r\n      }\r\n      case 1: {\r\n        if (types.indexOf(type) >= 0) {\r\n          setTypes([]);\r\n        } else {\r\n          setTypes([...types, type]);\r\n        }\r\n        break;\r\n      }\r\n      case 2: {\r\n        const idx = types.indexOf(type);\r\n        if (idx >= 0) {\r\n          const newTypes = [...types];\r\n          newTypes.splice(idx, 1);\r\n          setTypes(newTypes);\r\n        } else {\r\n          const newTypes = [...types];\r\n          newTypes.splice(1, 1, type);\r\n          setTypes(newTypes);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return { types, handleTypeChange, resetTypes };\r\n};\r\n\r\nexport default useTypeChanger;\r\n","export interface IPaginationState<T> {\r\n  entriesOnSelectedPage: T[];\r\n  elementsOnPage: number;\r\n  actualPageIdx: number;\r\n  lastPageIdx: number;\r\n  isBusy: boolean;\r\n  pagesNumbers: number[];\r\n}\r\n\r\nexport enum ActionTypes {\r\n  UPDATE_DATA_ENTIRES_ON_PAGE = 'UPDATE_DATA_ENTIRES_ON_PAGE',\r\n  UPDATE_ACTUAL_PAGE_INDEX = 'UPDATE_ACTUAL_PAGE_INDEX',\r\n  SET_TO_LOADING = 'SET_TO_LOADING',\r\n  SET_TO_LOADING_DONE = 'SET_TO_LOADING_DONE',\r\n}\r\n\r\nexport type availableIndexUpdates =\r\n  | 'next'\r\n  | 'prev'\r\n  | 'first'\r\n  | 'last'\r\n  | 'number';\r\n\r\nexport type Actions<T> =\r\n  | {\r\n      type: 'UPDATE_DATA_ENTIRES_ON_PAGE';\r\n      payload: {\r\n        dataEntries: T[];\r\n        elementsOnPage: number;\r\n      };\r\n    }\r\n  | {\r\n      type: 'UPDATE_ACTUAL_PAGE_INDEX';\r\n      payload: {\r\n        updateType: availableIndexUpdates;\r\n        pageNumber?: number;\r\n      };\r\n    }\r\n  | { type: 'SET_TO_LOADING' }\r\n  | { type: 'SET_TO_LOADING_DONE' };\r\n\r\n// export interface GenericPayload {\r\n//   [key: string]: any;\r\n// }\r\n// export interface GenericAction {\r\n//   type: string;\r\n//   payload?: GenericPayload;\r\n// }\r\n","import React from 'react';\r\nimport styles from './PaginationBtn.module.scss';\r\n\r\ninterface IProps {\r\n  number: number;\r\n  actualPageIdx: number;\r\n  goToPage: (pageNumber: number) => void;\r\n}\r\n\r\nconst PaginationBtn: React.FC<IProps> = ({\r\n  number,\r\n  actualPageIdx,\r\n  goToPage,\r\n}) => {\r\n  return (\r\n    <button\r\n      key={number}\r\n      onClick={() => goToPage(number)}\r\n      className={`${styles.PaginationBtn} ${\r\n        actualPageIdx === number ? styles.PaginationBtnActive : ''\r\n      }`}\r\n    >\r\n      {number}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PaginationBtn;\r\n","import styles from './Dots.module.scss';\r\n\r\nconst Dots = () => {\r\n  return <div className={styles.Dots}>...</div>;\r\n};\r\n\r\nexport default Dots;\r\n","import styles from '../PaginationBtn/PaginationBtn.module.scss';\r\n\r\ninterface IProps {\r\n  actionName?: string;\r\n  children?: React.ReactNode;\r\n  actionFn: () => void;\r\n  testID: string;\r\n}\r\n\r\nconst PaginateActionBtn: React.FC<IProps> = ({\r\n  actionName,\r\n  children,\r\n  testID,\r\n  actionFn,\r\n}) => (\r\n  <button\r\n    onClick={() => actionFn()}\r\n    className={styles.PaginationBtn}\r\n    data-testid={testID}\r\n  >\r\n    {actionName}\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default PaginateActionBtn;\r\n","import React, { useMemo } from 'react';\r\nimport styles from './PaginationPanel.module.scss';\r\nimport { IPaginationActions } from '../paginationTypes';\r\nimport { generatePagsToRender } from './generatePagesToRender';\r\nimport PaginateActionBtn from '../PaginateActionBtn/PaginateActionBtn';\r\ninterface IProps {\r\n  paginationState: {\r\n    lastPageIdx: number;\r\n    actualPageIdx: number;\r\n    pagesNumbers: number[];\r\n  };\r\n  paginationActions: IPaginationActions;\r\n}\r\n\r\nconst PaginationPanel: React.FC<IProps> = ({\r\n  paginationState,\r\n  paginationActions,\r\n}) => {\r\n  const { actualPageIdx, pagesNumbers, lastPageIdx } = paginationState;\r\n  const {\r\n    goToPage,\r\n    goToFirstPage,\r\n    goToPreviousPage,\r\n    goToNextPage,\r\n    goToLastPage,\r\n  } = paginationActions;\r\n\r\n  const pagesToRender = useMemo(\r\n    () =>\r\n      generatePagsToRender(pagesNumbers, actualPageIdx, lastPageIdx, goToPage),\r\n    [pagesNumbers, actualPageIdx, lastPageIdx, goToPage]\r\n  );\r\n  return (\r\n    <div className={styles.PaginationWrapper}>\r\n      <div className={styles.ButtonsContainer}>\r\n        <PaginateActionBtn\r\n          actionName='FIRST PAGE'\r\n          actionFn={goToFirstPage}\r\n          testID='firstPage'\r\n        />\r\n        <PaginateActionBtn actionFn={goToPreviousPage} testID='goToPrevPage'>\r\n          <span className={`${styles.Chevron} ${styles.ChevronLeft}`}></span>\r\n        </PaginateActionBtn>\r\n        <div dat-testid='goToPageButtons' style={{ display: 'flex' }}>\r\n          {pagesToRender}\r\n        </div>\r\n        <PaginateActionBtn actionFn={goToNextPage} testID='goToNextPage'>\r\n          <span className={`${styles.Chevron} ${styles.ChevronRight}`}></span>\r\n        </PaginateActionBtn>\r\n        <PaginateActionBtn\r\n          actionName='LAST PAGE'\r\n          actionFn={goToLastPage}\r\n          testID='lastPage'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationPanel;\r\n","import React from 'react';\r\nimport PaginationBtn from '../PaginationBtn/PaginationBtn';\r\nimport Dots from '../Dots/Dots';\r\n\r\nconst LAST_NUMBER_AT_START = 5;\r\nconst MAX_NUMBER_WITHOUT_SHRINK = 10;\r\nconst VALUE_END = LAST_NUMBER_AT_START - 1;\r\n\r\nexport const generatePagsToRender = (\r\n  pagesNumbers: number[],\r\n  actualPageIdx: number,\r\n  lastPageIdx: number,\r\n  goToPage: (pageNumber: number) => void\r\n) => {\r\n  if (pagesNumbers.length <= MAX_NUMBER_WITHOUT_SHRINK) {\r\n    return pagesNumbers.map(number => (\r\n      <PaginationBtn\r\n        number={number}\r\n        actualPageIdx={actualPageIdx}\r\n        goToPage={goToPage}\r\n        key={number}\r\n      />\r\n    ));\r\n  }\r\n  if (\r\n    pagesNumbers.length > MAX_NUMBER_WITHOUT_SHRINK &&\r\n    actualPageIdx < LAST_NUMBER_AT_START\r\n  ) {\r\n    return (\r\n      <>\r\n        {[...Array(LAST_NUMBER_AT_START)].map((_, idx) => {\r\n          const number = idx + 1;\r\n          return (\r\n            <PaginationBtn\r\n              number={number}\r\n              actualPageIdx={actualPageIdx}\r\n              goToPage={goToPage}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n        <Dots />\r\n        <PaginationBtn\r\n          number={lastPageIdx}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  if (\r\n    pagesNumbers.length > MAX_NUMBER_WITHOUT_SHRINK &&\r\n    actualPageIdx > lastPageIdx - VALUE_END\r\n  ) {\r\n    return (\r\n      <>\r\n        <PaginationBtn\r\n          number={1}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n        <Dots />\r\n        {[...Array(5)].map((_, idx) => {\r\n          const number = lastPageIdx - VALUE_END + idx;\r\n          return (\r\n            <PaginationBtn\r\n              number={number}\r\n              actualPageIdx={actualPageIdx}\r\n              goToPage={goToPage}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n  if (\r\n    (pagesNumbers.length > MAX_NUMBER_WITHOUT_SHRINK &&\r\n      actualPageIdx <= lastPageIdx - VALUE_END) ||\r\n    actualPageIdx >= LAST_NUMBER_AT_START\r\n  ) {\r\n    return (\r\n      <>\r\n        <PaginationBtn\r\n          number={1}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n        <Dots />\r\n        <PaginationBtn\r\n          number={actualPageIdx - 1}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n\r\n        <PaginationBtn\r\n          number={actualPageIdx}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n        <PaginationBtn\r\n          number={actualPageIdx + 1}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n        <Dots />\r\n        <PaginationBtn\r\n          number={lastPageIdx}\r\n          actualPageIdx={actualPageIdx}\r\n          goToPage={goToPage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","interface IObject {\r\n  [key: string]: any;\r\n}\r\n\r\nexport const updateObject = <T>(oldObject: T, updatedProperties: IObject) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const generatePagesNumbers = (lastAvailableIdx: number) => {\r\n  const pagesNumbers: number[] = [];\r\n  for (let i = 1; i <= lastAvailableIdx; i++) {\r\n    pagesNumbers.push(i);\r\n  }\r\n  return pagesNumbers;\r\n};\r\n\r\nexport const getEntriesOnSelectedPage = <T>(\r\n  actualPageIdx: number,\r\n  elementsOnPage: number,\r\n  lastPageIdx: number,\r\n  dataEntries: T[]\r\n) => {\r\n  const firstElementIdxOnActualPage: number =\r\n    (actualPageIdx - 1) * elementsOnPage;\r\n  const lastElementIdxOnActualPage: number =\r\n    actualPageIdx === lastPageIdx\r\n      ? dataEntries.length\r\n      : firstElementIdxOnActualPage + elementsOnPage;\r\n  return dataEntries.slice(\r\n    firstElementIdxOnActualPage,\r\n    lastElementIdxOnActualPage\r\n  );\r\n};\r\n","interface IPokemonDetails extends IPokemon {\r\n  description: string;\r\n}\r\n\r\nexport interface IState {\r\n  pokemonDetails: IPokemonDetails;\r\n  isLoading: boolean;\r\n  error: boolean;\r\n}\r\n\r\nexport const initialState = {\r\n  pokemonDetails: {\r\n    id: 0,\r\n    name: '',\r\n    height: 0,\r\n    weight: 0,\r\n    types: [],\r\n    sprites: {\r\n      front_default: '',\r\n      back_default: '',\r\n    },\r\n    stats: [{ statName: '', statValue: 0 }],\r\n    description: '',\r\n  },\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport enum ActionTypes {\r\n  FETCHING_DESCRIPTION_START = 'FETCHING_DESCRIPTION_START',\r\n  FETCHING_DESCRIPTION_SUCCESS = 'FETCHING_DESCRIPTION_SUCCESS',\r\n  FETCHING_DESCRIPTION_FAIL = 'FETCHING_DESCRIPTION_FAIL',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'FETCHING_DESCRIPTION_START';\r\n    }\r\n  | {\r\n      type: 'FETCHING_DESCRIPTION_SUCCESS';\r\n      payload: { description: string; pokemon: IPokemon };\r\n    }\r\n  | {\r\n      type: 'FETCHING_DESCRIPTION_FAIL';\r\n    };\r\n\r\nconst descriptionReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case ActionTypes.FETCHING_DESCRIPTION_START:\r\n      return { ...state, isLoading: true };\r\n    case ActionTypes.FETCHING_DESCRIPTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        pokemonDetails: {\r\n          ...action.payload.pokemon,\r\n          description: action.payload.description,\r\n        },\r\n      };\r\n    case ActionTypes.FETCHING_DESCRIPTION_FAIL:\r\n      return { ...state, isLoading: false, error: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default descriptionReducer;\r\n","import { IPaginationState, ActionTypes, Actions } from './reducerTypes';\r\nimport {\r\n  generatePagesNumbers,\r\n  getEntriesOnSelectedPage,\r\n} from '../helpers/helpers';\r\n\r\nconst FIRST_PAGE_IDX: number = 1;\r\n\r\ninterface IInitialState {\r\n  entriesOnSelectedPage: Array<any>;\r\n  elementsOnPage: number;\r\n  actualPageIdx: number;\r\n  lastPageIdx: number;\r\n  isBusy: boolean;\r\n  pagesNumbers: number[];\r\n}\r\n// export const initialState: IPaginationState<IUser>\r\nexport const initialState: IInitialState = {\r\n  entriesOnSelectedPage: [],\r\n  elementsOnPage: 20,\r\n  actualPageIdx: FIRST_PAGE_IDX,\r\n  lastPageIdx: FIRST_PAGE_IDX,\r\n  pagesNumbers: [],\r\n  isBusy: false,\r\n};\r\n\r\n// export const paginationReducer = (\r\n//   state: IPaginationState<IUser>,\r\n//   action: Actions<IUser>\r\n// React.Reducer<State, Action>\r\n\r\nexport const paginationReducer = <T,>(\r\n  state: IPaginationState<T>,\r\n  action: Actions<T>\r\n) => {\r\n  // const reducer: React.Reducer<IPaginationState<T>, Actions<T>> = (\r\n  //   state,\r\n  //   action\r\n  // ) => {\r\n  switch (action.type) {\r\n    case ActionTypes.UPDATE_DATA_ENTIRES_ON_PAGE:\r\n      return updateDataEntriesOnPage(state, action);\r\n    case ActionTypes.UPDATE_ACTUAL_PAGE_INDEX:\r\n      return updateActualPageIndex(state, action);\r\n    case ActionTypes.SET_TO_LOADING:\r\n      return setToLoading(state, action);\r\n    case ActionTypes.SET_TO_LOADING_DONE:\r\n      return setToLoadingDone(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n  // };\r\n\r\n  // return reducer(_state, _action);\r\n};\r\n\r\nconst setToLoading = <T,>(state: IPaginationState<T>, action: Actions<T>) => ({\r\n  ...state,\r\n  isBusy: true,\r\n});\r\nconst setToLoadingDone = <T,>(\r\n  state: IPaginationState<T>,\r\n  action: Actions<T>\r\n) => ({\r\n  ...state,\r\n  isBusy: false,\r\n});\r\n\r\nconst updateDataEntriesOnPage = <T,>(\r\n  state: IPaginationState<T>,\r\n  action: Actions<T>\r\n) => {\r\n  if (action.type === 'UPDATE_DATA_ENTIRES_ON_PAGE') {\r\n    const { actualPageIdx } = state;\r\n    const { elementsOnPage, dataEntries } = action.payload;\r\n    const lastPageIdx: number = Math.ceil(dataEntries.length / elementsOnPage);\r\n    const pagesNumbers: number[] = generatePagesNumbers(lastPageIdx);\r\n    const entriesOnSelectedPage = getEntriesOnSelectedPage(\r\n      actualPageIdx,\r\n      elementsOnPage,\r\n      lastPageIdx,\r\n      dataEntries\r\n    );\r\n    return {\r\n      ...state,\r\n      entriesOnSelectedPage,\r\n      elementsOnPage,\r\n      lastPageIdx,\r\n      pagesNumbers,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst updateActualPageIndex = <T,>(\r\n  state: IPaginationState<T>,\r\n  action: Actions<T>\r\n) => {\r\n  if (action.type === 'UPDATE_ACTUAL_PAGE_INDEX') {\r\n    switch (action.payload.updateType) {\r\n      case 'first':\r\n        return { ...state, actualPageIdx: FIRST_PAGE_IDX };\r\n      case 'last':\r\n        return { ...state, actualPageIdx: state.lastPageIdx };\r\n      case 'number':\r\n        if (action.payload.pageNumber) {\r\n          return { ...state, actualPageIdx: action.payload.pageNumber };\r\n        } else {\r\n          return state;\r\n        }\r\n      case 'next':\r\n        const actualPageIdx: number =\r\n          state.actualPageIdx === state.lastPageIdx\r\n            ? state.lastPageIdx\r\n            : state.actualPageIdx + 1;\r\n        return { ...state, actualPageIdx };\r\n      case 'prev':\r\n        const actualPageIdxPrev: number =\r\n          state.actualPageIdx === FIRST_PAGE_IDX\r\n            ? state.actualPageIdx\r\n            : state.actualPageIdx - 1;\r\n        return { ...state, actualPageIdx: actualPageIdxPrev };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","import { ActionTypes, Actions } from '../reducer/reducerTypes';\r\n\r\nconst actionsFactory = <T>(dispatch: React.Dispatch<Actions<T>>) => ({\r\n  updateDataEntries: (dataEntries: T[], elementsOnPage: number) =>\r\n    dispatch({\r\n      type: 'UPDATE_DATA_ENTIRES_ON_PAGE',\r\n      payload: {\r\n        dataEntries,\r\n        elementsOnPage,\r\n      },\r\n    }),\r\n  setToIsLoading: () => dispatch({ type: ActionTypes.SET_TO_LOADING }),\r\n  setToLoadingDone: () => dispatch({ type: ActionTypes.SET_TO_LOADING_DONE }),\r\n  goToFirstPage: () =>\r\n    dispatch({\r\n      type: ActionTypes.UPDATE_ACTUAL_PAGE_INDEX,\r\n      payload: {\r\n        updateType: 'first',\r\n      },\r\n    }),\r\n  goToLastPage: () =>\r\n    dispatch({\r\n      type: ActionTypes.UPDATE_ACTUAL_PAGE_INDEX,\r\n      payload: {\r\n        updateType: 'last',\r\n      },\r\n    }),\r\n  goToPage: (pageNumber: number) =>\r\n    dispatch({\r\n      type: ActionTypes.UPDATE_ACTUAL_PAGE_INDEX,\r\n      payload: {\r\n        updateType: 'number',\r\n        pageNumber,\r\n      },\r\n    }),\r\n  goToNextPage: () =>\r\n    dispatch({\r\n      type: ActionTypes.UPDATE_ACTUAL_PAGE_INDEX,\r\n      payload: {\r\n        updateType: 'next',\r\n      },\r\n    }),\r\n  goToPreviousPage: () =>\r\n    dispatch({\r\n      type: ActionTypes.UPDATE_ACTUAL_PAGE_INDEX,\r\n      payload: {\r\n        updateType: 'prev',\r\n      },\r\n    }),\r\n});\r\n\r\nexport default actionsFactory;\r\n","import { useEffect, useReducer } from 'react';\r\nimport {\r\n  IPaginationStateValues,\r\n  IPaginationActions,\r\n  paginationTuple,\r\n} from '../paginationTypes';\r\nimport { initialState, paginationReducer } from '../reducer/paginationReducer';\r\nimport actionsFactory from './actionsFactory';\r\nimport { IPaginationState, Actions } from '../reducer/reducerTypes';\r\nimport React from 'react';\r\n\r\nconst usePagination = <T,>(dataEntries: T[], elementsOnPage: number = 20) => {\r\n  const [paginationState, dispatch] = useReducer<\r\n    React.Reducer<IPaginationState<T>, Actions<T>>\r\n  >(paginationReducer, initialState);\r\n  const actions = actionsFactory(dispatch);\r\n  const {\r\n    actualPageIdx,\r\n    lastPageIdx,\r\n    entriesOnSelectedPage,\r\n    pagesNumbers,\r\n    isBusy,\r\n  } = paginationState;\r\n\r\n  useEffect(() => {\r\n    actions.updateDataEntries(dataEntries, elementsOnPage);\r\n  }, [dataEntries, elementsOnPage, actualPageIdx]);\r\n\r\n  useEffect(() => {\r\n    actions.setToIsLoading();\r\n    let timer = setTimeout(() => actions.setToLoadingDone(), 333);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [actualPageIdx]);\r\n\r\n  const paginationStateValues: IPaginationStateValues<T> = {\r\n    actualPageIdx,\r\n    lastPageIdx,\r\n    entriesOnSelectedPage,\r\n    isBusy,\r\n    pagesNumbers,\r\n  };\r\n\r\n  const paginationActions: IPaginationActions = {\r\n    goToFirstPage: actions.goToFirstPage,\r\n    goToPreviousPage: actions.goToPreviousPage,\r\n    goToPage: actions.goToPage,\r\n    goToNextPage: actions.goToNextPage,\r\n    goToLastPage: actions.goToLastPage,\r\n  };\r\n\r\n  return [paginationStateValues, paginationActions] as paginationTuple<T>;\r\n};\r\n\r\nexport default usePagination;\r\n","import React, { useMemo } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faWeightHanging,\r\n  faSortAmountUp,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classes from './PokemonCard.module.scss';\r\n\r\nimport { TYPE_COLORS } from '../../../constans/constans';\r\n\r\ninterface IProps {\r\n  pokemon: IPokemon;\r\n}\r\n\r\nconst generateBgDependingOnType = (pokemon: IPokemon) => {\r\n  const bgColorTypes: string[] = [];\r\n  pokemon.types.forEach((pokemonType, index) => {\r\n    if (index === 0) {\r\n      bgColorTypes.push(TYPE_COLORS[pokemonType]);\r\n      bgColorTypes.push(TYPE_COLORS[pokemonType]);\r\n    } else {\r\n      bgColorTypes.splice(1, 1, TYPE_COLORS[pokemonType]);\r\n    }\r\n  });\r\n  return {\r\n    background: `linear-gradient(45deg, ${bgColorTypes[0]} 50%, ${bgColorTypes[1]} 50%`,\r\n  };\r\n};\r\n\r\nconst handleMouseMoveOverImage = (\r\n  event: React.MouseEvent<HTMLImageElement, MouseEvent>,\r\n  pokemonSprite: string\r\n) => {\r\n  const target = event.target as HTMLImageElement;\r\n  return (target.src =\r\n    pokemonSprite || 'https://img.icons8.com/bubbles/100/000000/no-image.png');\r\n};\r\n\r\nconst drawTypes = (types: string[]) => {\r\n  return types\r\n    .map(\r\n      pokemonType => pokemonType.charAt(0).toUpperCase() + pokemonType.slice(1)\r\n    )\r\n    .join('/');\r\n};\r\n\r\nconst drawId = (id: number) => {\r\n  if (id < 10) {\r\n    return '#00' + id;\r\n  }\r\n  if (id >= 10 && id < 100) {\r\n    return '#0' + id;\r\n  }\r\n  return '#' + id;\r\n};\r\n\r\nconst PokemonCard: React.FC<IProps> = ({ pokemon }) => {\r\n  const location = useLocation();\r\n  const { id, name, height, weight, types, sprites } = pokemon;\r\n  const cardBg = useMemo(() => generateBgDependingOnType(pokemon), [pokemon]);\r\n  const pokemonTypes = useMemo(() => drawTypes(types), [types]);\r\n  const pokemonId = useMemo(() => drawId(id), [id]);\r\n\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/${name}`,\r\n        search: `?id=${id}`,\r\n        state: { background: location },\r\n      }}\r\n      style={{ textDecoration: 'none' }}\r\n    >\r\n      <div className={classes.PokemonCard} style={cardBg}>\r\n        <img\r\n          onMouseOver={e => handleMouseMoveOverImage(e, sprites.back_default)}\r\n          onMouseOut={e => handleMouseMoveOverImage(e, sprites.front_default)}\r\n          src={\r\n            sprites.front_default ||\r\n            'https://img.icons8.com/bubbles/100/000000/no-image.png'\r\n          }\r\n          alt='pokemon-icons'\r\n        />\r\n        <h1 className={classes.PokemonName}>{name}</h1>\r\n        <p className={classes.PokemonId}>{pokemonId}</p>\r\n        <div className={classes.Info}>\r\n          <div className={classes.DetailInfo}>\r\n            <i>\r\n              <FontAwesomeIcon icon={faWeightHanging} size='2x' />\r\n            </i>\r\n            <span className={classes.WeightHeight}>{weight}</span>\r\n          </div>\r\n          <div className={classes.DetailInfo}>\r\n            <i>\r\n              <FontAwesomeIcon icon={faSortAmountUp} size='2x' />\r\n            </i>\r\n            <span className={classes.WeightHeight}>{height}</span>\r\n          </div>\r\n        </div>\r\n        <div className={classes.Details}>DETAILS</div>\r\n        <p className={classes.Type}>Type: {pokemonTypes}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from 'react';\r\nimport PaginationPanel from '../Pagination/PaginationPanel/PaginationPanel';\r\nimport usePagination from '../Pagination/usePagination/usePagination';\r\nimport PokemonCard from '../PokemonCard/PokemonCard';\r\nimport classes from '../Pokedex.module.scss';\r\nimport { useEffect } from 'react';\r\n\r\ninterface IProps {\r\n  pokemonsToDisplay: IPokemon[];\r\n  types: AvailavlePokemonTypes[];\r\n}\r\nconst Pokemons: React.FC<IProps> = ({ pokemonsToDisplay, types }) => {\r\n  const [paginationState, paginationActions] = usePagination(\r\n    pokemonsToDisplay,\r\n    20\r\n  );\r\n  useEffect(() => {\r\n    paginationActions.goToFirstPage();\r\n  }, [types]);\r\n  return (\r\n    <>\r\n      <div className={classes.Container} data-testid='pokemonCardContainer'>\r\n        {paginationState.entriesOnSelectedPage\r\n          .slice(0, 20)\r\n          .map((pokemon, idx) => (\r\n            <PokemonCard pokemon={pokemon} key={pokemon.name + idx} />\r\n          ))}\r\n      </div>\r\n      <div>\r\n        <PaginationPanel\r\n          paginationState={paginationState}\r\n          paginationActions={paginationActions}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemons;\r\n","import { useEffect, useContext, useReducer } from 'react';\r\nimport classes from './Pokedex.module.scss';\r\n\r\nimport { pokedexCtx } from '../../store/pokemons/context/pokemonsContextProvider';\r\n\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Filter from './Filter/Filter';\r\nimport useTypeChanger from '../../customHooks/useTypeChanger';\r\nimport filterReducer, {\r\n  Actions,\r\n  ActionTypes,\r\n  initialState,\r\n} from '../../reducers/filterReducer';\r\nimport Pokemons from './Pokemons/Pokemons';\r\n\r\nconst actionsFactory = (dispatch: React.Dispatch<Actions>) => ({\r\n  filterPokemons: (pokemons: IPokemon[], types: AvailavlePokemonTypes[]) =>\r\n    dispatch({\r\n      type: ActionTypes.FILTER_POKEMONS,\r\n      payload: {\r\n        pokemons,\r\n        types,\r\n      },\r\n    }),\r\n  setPokemonsToDisplay: (pokemons: IPokemon[]) =>\r\n    dispatch({\r\n      type: ActionTypes.SET_POKEMONS_TO_DISPLAY,\r\n      payload: {\r\n        pokemons: pokemons,\r\n      },\r\n    }),\r\n});\r\n\r\nconst Pokedex = () => {\r\n  const { pokedexState } = useContext(pokedexCtx);\r\n  const { pokemons } = pokedexState;\r\n  const { types, handleTypeChange, resetTypes } = useTypeChanger();\r\n\r\n  const [state, dispatch] = useReducer(filterReducer, initialState);\r\n  const actions = actionsFactory(dispatch);\r\n\r\n  useEffect(() => {\r\n    if (pokemons) actions.setPokemonsToDisplay(pokemons);\r\n  }, [pokemons]);\r\n\r\n  useEffect(() => {\r\n    actions.filterPokemons(pokemons, types);\r\n  }, [types, pokemons]);\r\n\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <Filter\r\n        types={types}\r\n        handleTypeChange={handleTypeChange}\r\n        resetTypes={resetTypes}\r\n      />\r\n      {pokedexState.error && (\r\n        <p className={classes.Error}>\r\n          Sorry an ERROR has occured, data couldn't be loaded - please try later\r\n          or check your url\r\n        </p>\r\n      )}\r\n      {!pokedexState.isLoading ? (\r\n        <Pokemons pokemonsToDisplay={state.pokemonsToDisplay} types={types} />\r\n      ) : (\r\n        <div className={classes.SpinnerContainer}>\r\n          <p className={classes.LoadingText}>\r\n            Pateince young padawan... Data is loading... :)\r\n          </p>\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","export default __webpack_public_path__ + \"static/media/pokemon_1.91a9decf.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_2.2f208ef9.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_3.ac043cae.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_4.1e80cc36.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_5.505d30b8.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_6.c4903139.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_7.520c1cc6.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_8.77e39d01.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_9.1bea1e86.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon_10.149959c1.jpg\";","import classes from '../Gallery.module.scss';\r\n\r\ninterface IProps {\r\n  gridClass: string;\r\n  img: string;\r\n}\r\n\r\nconst PhotoItem: React.FC<IProps> = ({ img, gridClass }) => {\r\n  return (\r\n    <div className={`${classes.Center} ${gridClass}`}>\r\n      <img className={classes.ResponsiveImage} src={img} alt='random pokemon' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoItem;\r\n","import p1 from '../../assets/images/pokemon_1.jpg';\r\nimport p2 from '../../assets/images/pokemon_2.jpg';\r\nimport p3 from '../../assets/images/pokemon_3.jpg';\r\nimport p4 from '../../assets/images/pokemon_4.jpg';\r\nimport p5 from '../../assets/images/pokemon_5.jpg';\r\nimport p6 from '../../assets/images/pokemon_6.jpg';\r\nimport p7 from '../../assets/images/pokemon_7.jpg';\r\nimport p8 from '../../assets/images/pokemon_8.jpg';\r\nimport p9 from '../../assets/images/pokemon_9.jpg';\r\nimport p10 from '../../assets/images/pokemon_10.jpg';\r\nimport classes from './Gallery.module.scss';\r\nimport PhotoItem from './PhotoItem/PhotoItem';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div className={classes.Wrapper}>\r\n      <h2 className={classes.Title}>\r\n        Resize the window to explore how this responsive gallery works!\r\n      </h2>\r\n      <div className={classes.GridContainer}>\r\n        <PhotoItem img={p1} gridClass={classes.p1} />\r\n        <PhotoItem img={p2} gridClass={classes.p2} />\r\n        <PhotoItem img={p3} gridClass={classes.p3} />\r\n        <PhotoItem img={p4} gridClass={classes.p4} />\r\n        <PhotoItem img={p5} gridClass={classes.p5} />\r\n        <PhotoItem img={p6} gridClass={classes.p6} />\r\n        <PhotoItem img={p7} gridClass={classes.p7} />\r\n        <PhotoItem img={p8} gridClass={classes.p8} />\r\n        <PhotoItem img={p9} gridClass={classes.p9} />\r\n        <PhotoItem img={p10} gridClass={classes.p10} />\r\n        <PhotoItem img={p1} gridClass={classes.p11} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './RouteModal.module.scss';\r\n\r\nconst RouteModal: React.FC<React.ReactNode> = ({ children }) => {\r\n  const history = useHistory();\r\n\r\n  const closeModal = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      document.body.style.overflow = 'visible';\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Wrapper} onClick={closeModal}>\r\n      {/* <span className={classes.Close} onClick={closeModal}>\r\n        <svg\r\n          className={classes.CloseIcon}\r\n          fill='currentColor'\r\n          viewBox='0 0 20 20'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            fill-rule='evenodd'\r\n            d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'\r\n            clip-rule='evenodd'\r\n          />\r\n        </svg>\r\n      </span> */}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteModal;\r\n","import { createContext, useReducer } from 'react';\r\nimport descriptionReducer, {\r\n  IState,\r\n  initialState,\r\n} from '../reducer/descriptionReducer';\r\nimport { actionsFactory } from './actionsFactory';\r\n\r\nexport interface IContext {\r\n  state: IState;\r\n  fetchActions: {\r\n    fetchDescriptionStart: () => void;\r\n    fetchDescriptionSuccess: (description: string, pokemon: IPokemon) => void;\r\n    fetchDescriptionFail: () => void;\r\n  };\r\n}\r\n\r\nconst initCtx: IContext = {\r\n  state: initialState,\r\n  fetchActions: {\r\n    fetchDescriptionStart: () => {},\r\n    fetchDescriptionSuccess: () => {},\r\n    fetchDescriptionFail: () => {},\r\n  },\r\n};\r\n\r\nexport const descriptionCtx = createContext(initCtx);\r\n\r\nconst DescriptionContextProvider: React.FC<React.ReactNode> = ({\r\n  children,\r\n}) => {\r\n  const [state, dispatch] = useReducer(descriptionReducer, initialState);\r\n  const actions = actionsFactory(dispatch);\r\n  const {\r\n    fetchDescriptionStart,\r\n    fetchDescriptionSuccess,\r\n    fetchDescriptionFail,\r\n  } = actions;\r\n  const fetchActions = {\r\n    fetchDescriptionStart,\r\n    fetchDescriptionSuccess,\r\n    fetchDescriptionFail,\r\n  };\r\n  const providerValue = {\r\n    state,\r\n    fetchActions,\r\n  };\r\n  return (\r\n    <descriptionCtx.Provider value={providerValue}>\r\n      {children}\r\n    </descriptionCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default DescriptionContextProvider;\r\n","import { Actions, ActionTypes } from '../reducer/descriptionReducer';\r\n\r\nexport const actionsFactory = (dispatch: React.Dispatch<Actions>) => ({\r\n  fetchDescriptionStart: () =>\r\n    dispatch({ type: ActionTypes.FETCHING_DESCRIPTION_START }),\r\n  fetchDescriptionSuccess: (description: string, pokemon: IPokemon) =>\r\n    dispatch({\r\n      type: ActionTypes.FETCHING_DESCRIPTION_SUCCESS,\r\n      payload: { description, pokemon },\r\n    }),\r\n  fetchDescriptionFail: () =>\r\n    dispatch({ type: ActionTypes.FETCHING_DESCRIPTION_FAIL }),\r\n});\r\n","interface IWithLanguage {\r\n  language: { name: string };\r\n}\r\n\r\nconst getDescription = async (url: string, id: string) => {\r\n  const urlPath = url + `/${id}`;\r\n  const response = await fetch(urlPath);\r\n  const data = await response.json();\r\n  const description = data.flavor_text_entries.find(\r\n    <T extends IWithLanguage>(text: T) => text.language.name === 'en'\r\n  );\r\n  const convertedDescription = description.flavor_text.replace(/\\u21b5/g, '');\r\n  return convertedDescription;\r\n};\r\n\r\nexport default getDescription;\r\n","import classes from './Skill.module.scss';\r\n\r\ninterface IProps {\r\n  statName: string;\r\n  statValue: number;\r\n}\r\nconst Skill: React.FC<IProps> = ({ statName, statValue }) => {\r\n  return (\r\n    <>\r\n      <p className={classes.StatName}>\r\n        {statName} <span className={classes.StatValue}>{statValue}</span>\r\n      </p>\r\n      <div className={classes.OutsideSkillBar}>\r\n        <div\r\n          className={classes.InsideSkillBar}\r\n          style={{ width: `${(statValue / 255) * 100}%` }}\r\n        ></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Skill;\r\n","import { useContext, useEffect, useMemo } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport {\r\n  URL_POKEMON_DESCRIPTION,\r\n  TYPE_COLORS,\r\n} from '../../../constans/constans';\r\nimport { descriptionCtx } from '../../../store/description/context/descriptionContextProvider';\r\nimport getDescription from '../../../store/description/context/getDescription';\r\nimport { pokedexCtx } from '../../../store/pokemons/context/pokemonsContextProvider';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classes from './PokemonDetails.module.scss';\r\n\r\nimport Skill from './Skill/Skill';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst drawId = (id: number) => {\r\n  if (id < 10) {\r\n    return '#00' + id;\r\n  }\r\n  if (id >= 10 && id < 100) {\r\n    return '#0' + id;\r\n  }\r\n  return '#' + id;\r\n};\r\n\r\nconst generatePokemonSpanTypes = (types: AvailavlePokemonTypes[]) =>\r\n  types.map((type, index) => {\r\n    let spanStyle = {\r\n      color: `${TYPE_COLORS[type]}`,\r\n      border: `3px solid ${TYPE_COLORS[type]}`,\r\n    };\r\n    return (\r\n      <span key={type + index} style={spanStyle} className={classes.SpanType}>\r\n        {type.charAt(0).toUpperCase() + type.slice(1)}\r\n      </span>\r\n    );\r\n  });\r\n\r\nconst generateSkills = (stats: IStats[]) =>\r\n  stats.map(stat => (\r\n    <Skill\r\n      statValue={stat.statValue}\r\n      statName={stat.statName}\r\n      key={stat.statValue + stat.statName}\r\n    />\r\n  ));\r\n\r\nconst findPokemonById = (id: string, pokemons: IPokemon[]) =>\r\n  pokemons.find(pokemon => pokemon.id === parseInt(id));\r\n\r\ninterface IProps {\r\n  id_url: string | null;\r\n}\r\n\r\nconst PokemonDetails: React.FC<IProps> = ({ id_url }) => {\r\n  const history = useHistory();\r\n  const { state, fetchActions } = useContext(descriptionCtx);\r\n  const { pokedexState } = useContext(pokedexCtx);\r\n  // const { nameFromUrl } = useParams<{ [key: string]: string }>();\r\n  const {\r\n    id,\r\n    name,\r\n    height,\r\n    weight,\r\n    types,\r\n    stats,\r\n    description,\r\n  } = state.pokemonDetails;\r\n\r\n  const spanTypes = useMemo(() => generatePokemonSpanTypes(types), [types]);\r\n  const id_format = useMemo(() => drawId(id), [id]);\r\n  const skillsList = useMemo(() => generateSkills(stats), [stats]);\r\n\r\n  useEffect(() => {\r\n    if (!id_url) {\r\n      fetchActions.fetchDescriptionFail();\r\n    } else {\r\n      const pokemon = findPokemonById(id_url, pokedexState.pokemons);\r\n      const fetchDescription = async (pokemon: IPokemon) => {\r\n        fetchActions.fetchDescriptionStart();\r\n        try {\r\n          const description = await getDescription(\r\n            URL_POKEMON_DESCRIPTION,\r\n            id_url\r\n          );\r\n          fetchActions.fetchDescriptionSuccess(description, pokemon);\r\n        } catch (err) {\r\n          fetchActions.fetchDescriptionFail();\r\n        }\r\n      };\r\n      if (pokemon) fetchDescription(pokemon);\r\n    }\r\n  }, [id_url]);\r\n\r\n  useEffect(() => {\r\n    if (state.error) console.log('Error while fetching - display alert');\r\n  }, [state.error]);\r\n\r\n  const closeModal = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Wrapper} onClick={e => e.stopPropagation()}>\r\n      <div className={classes.DetailsCard}>\r\n        {state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <i className={classes.closeIcon} onClick={e => closeModal(e)}>\r\n              <FontAwesomeIcon icon={faTimes} size='2x' />\r\n            </i>\r\n            <img src={state.pokemonDetails.sprites.front_default} alt='' />\r\n            <h1 className={classes.PokemonName}>{name}</h1>\r\n            <p className={classes.PokemonId}>{id_format}</p>\r\n            <p className={classes.PokemonDescription}>{description}</p>\r\n            <div className={classes.PokemonInfoContainer}>\r\n              <p className={classes.PokemonWeight}>Weight: {weight}</p>\r\n              <p>Height: {height}</p>\r\n            </div>\r\n            <div className={classes.PokemonInfoContainer}>{spanTypes}</div>\r\n            <div className={classes.SkillsContainer}>{skillsList}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import { Link, useLocation } from 'react-router-dom';\r\n\r\nimport classes from './Page404.module.scss';\r\n\r\nconst Page404 = () => {\r\n  const location = useLocation();\r\n  return (\r\n    <div className={classes.Container}>\r\n      <h2 className={classes.Info}>\r\n        Sorry, no match found for <code>{location.pathname}</code>\r\n      </h2>\r\n      <Link to='/' className={classes.Back}>\r\n        Back to main page\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { Location } from 'history';\r\nimport BestPokemons from '../BestPokemons/BestPokemons';\r\nimport Contact from '../Contact/Contact';\r\nimport Pokedex from '../Pokedex/Pokedex';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport RouteModal from '../UI/RouteModal/RouteModal';\r\nimport PokemonDetails from '../Pokedex/PokemonDetails/PokemonDetails';\r\nimport { useQuery } from '../../customHooks/useQuery';\r\nimport Page404 from '../Page404/Page404';\r\n\r\ninterface ILocationState {\r\n  pathname: string;\r\n  state: { background: Location };\r\n}\r\n\r\nconst Routes = () => {\r\n  const location: ILocationState = useLocation();\r\n  const background = location.state && location.state.background;\r\n  const id = useQuery('id', location);\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/gallery' component={Gallery} />\r\n        <Route path='/mybest' component={BestPokemons} />\r\n        <Route exact path='/' component={Pokedex} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n      {background && (\r\n        <Route\r\n          path='/:name'\r\n          children={\r\n            <RouteModal>\r\n              <PokemonDetails id_url={id} />\r\n            </RouteModal>\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export const useQuery = (key: string, location: any) => {\r\n  const query = new URLSearchParams(location.search);\r\n  return query.get(`${key}`);\r\n};\r\n","interface IWithUrl {\r\n  url: string;\r\n}\r\n\r\nconst getPokemons = async (url: string) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n\r\n  const pokemons: IPokemon[] = await Promise.all(\r\n    data.results.map(async <T extends IWithUrl>(result: T) => {\r\n      let url = result.url;\r\n      // unexpected problem in API - temporary fix solution to make app works\r\n      if (url === 'https://pokeapi.co/api/v2/pokemon/212/') {\r\n        // console.log('url', url);\r\n        url = 'https://pokeapi.co/api/v2/pokemon/213/';\r\n      }\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const { id, name, height, weight, types, sprites, stats } = data;\r\n      const { front_default, back_default } = sprites;\r\n      const spritesImages = {\r\n        front_default,\r\n        back_default,\r\n      };\r\n      const pokemonTypes = types.map((type: any) => type.type.name);\r\n      const pokemonStats = stats.map((singleStat: any) => {\r\n        return {\r\n          statName: singleStat.stat.name,\r\n          statValue: singleStat.base_stat,\r\n        };\r\n      });\r\n      return {\r\n        id,\r\n        name,\r\n        height,\r\n        weight,\r\n        sprites: spritesImages,\r\n        types: pokemonTypes,\r\n        stats: pokemonStats,\r\n      };\r\n    })\r\n  );\r\n  return pokemons;\r\n};\r\n\r\nexport default getPokemons;\r\n","import React, { useContext, useEffect } from 'react';\nimport Layout from './components/Layout/Layout';\nimport Routes from './components/Routes/Routes';\nimport { URL_ALL_POKEMONS } from './constans/constans';\nimport getPokemons from './store/pokemons/context/getPokemons';\nimport { pokedexCtx } from './store/pokemons/context/pokemonsContextProvider';\n\nconst App = () => {\n  const { fetchActions } = useContext(pokedexCtx);\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      fetchActions.fetchPokemonsStart();\n      try {\n        const pokemons = await getPokemons(URL_ALL_POKEMONS);\n        fetchActions.fetchPokemonsSuccess(pokemons);\n      } catch (err) {\n        fetchActions.fetchPokemonsFail();\n      }\n    };\n    fetchPokemons();\n  }, []);\n  return (\n    <Layout>\n      <Routes />\n    </Layout>\n  );\n};\n\nexport default App;\n","import React, { createContext, ReactNode, useState, useEffect } from 'react';\r\n\r\ninterface IVieportSizeContexProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const viewportSizeContext = createContext({\r\n  width: window.innerWidth,\r\n  height: window.innerHeight,\r\n} as IVieportSizeContexProps);\r\n\r\n// const getWidth = () => window.innerWidth\r\n//   || document.documentElement.clientWidth\r\n//   || document.body.clientWidth;\r\n\r\nconst ViewportSizeContextProvider: React.FC<ReactNode> = ({ children }) => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n  const handleWindowResize = () => {\r\n    setWindowSize({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowResize);\r\n    window.addEventListener('onorientationchange', handleWindowResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowResize);\r\n      window.removeEventListener('onorientationchange', handleWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <viewportSizeContext.Provider value={windowSize}>\r\n      {children}\r\n    </viewportSizeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ViewportSizeContextProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'normalize.css';\nimport './index.css';\nimport PokemonsContextProvider from './store/pokemons/context/pokemonsContextProvider';\nimport ViewportSizeContextProvider from './contexts/ViewportSizeContextProvider';\nimport DescriptionContextProvider from './store/description/context/descriptionContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ViewportSizeContextProvider>\n        <PokemonsContextProvider>\n          <DescriptionContextProvider>\n            <App />\n          </DescriptionContextProvider>\n        </PokemonsContextProvider>\n      </ViewportSizeContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FooterContainer\":\"Footer_FooterContainer__2cFYN\",\"FooterWrapper\":\"Footer_FooterWrapper__r5VtV\",\"CopyrightsContainer\":\"Footer_CopyrightsContainer__2K5qu\",\"LinksContainer\":\"Footer_LinksContainer__daSYA\",\"Link\":\"Footer_Link__DQJgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Pokedex_Wrapper__25e8r\",\"Container\":\"Pokedex_Container__303QH\",\"SpinnerContainer\":\"Pokedex_SpinnerContainer__179IK\",\"LoadingText\":\"Pokedex_LoadingText__2gpaX\",\"Error\":\"Pokedex_Error__1DXBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Form_Wrapper__3msYv\",\"Title\":\"Form_Title__2SIEQ\",\"Form\":\"Form_Form__7BV-N\",\"ButtonsContainer\":\"Form_ButtonsContainer__1J4kl\",\"Btn\":\"Form_Btn__opJvW\",\"Cancel\":\"Form_Cancel__1xBqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationWrapper\":\"PaginationPanel_PaginationWrapper__1hP0K\",\"ButtonsContainer\":\"PaginationPanel_ButtonsContainer__2l7OM\",\"Chevron\":\"PaginationPanel_Chevron__p_wKd\",\"ChevronLeft\":\"PaginationPanel_ChevronLeft__2RePw\",\"ChevronRight\":\"PaginationPanel_ChevronRight__2GTTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroup\":\"SingleInput_InputGroup__j9ayX\",\"Label\":\"SingleInput_Label__5PnPI\",\"LabelRequired\":\"SingleInput_LabelRequired__26klA\",\"Input\":\"SingleInput_Input__mQukP\",\"ErrorField\":\"SingleInput_ErrorField__21YvA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroup\":\"SelectInput_InputGroup__1aO-1\",\"Label\":\"SelectInput_Label__VpZip\",\"LabelRequired\":\"SelectInput_LabelRequired__2QgLi\",\"Input\":\"SelectInput_Input__27Dd_\",\"ErrorField\":\"SelectInput_ErrorField__1L_gp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroup\":\"CheckboxInput_InputGroup__aeiLi\",\"LabelRequired\":\"CheckboxInput_LabelRequired__3LG8M\",\"Input\":\"CheckboxInput_Input__4Zz6V\",\"ErrorField\":\"CheckboxInput_ErrorField__25Nu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3dDL2\",\"Wrapper\":\"Modal_Wrapper__2BuHV\",\"Modal\":\"Modal_Modal__3uhm6\",\"ModalClose\":\"Modal_ModalClose__2ShAJ\",\"ModalCloseButton\":\"Modal_ModalCloseButton__2cuJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PaginationBtn\":\"PaginationBtn_PaginationBtn__WXccM\",\"PaginationBtnActive\":\"PaginationBtn_PaginationBtnActive__3wSrk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatName\":\"Skill_StatName__3-1Fc\",\"StatValue\":\"Skill_StatValue__15cy_\",\"OutsideSkillBar\":\"Skill_OutsideSkillBar__1tz9s\",\"InsideSkillBar\":\"Skill_InsideSkillBar__1N6Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hamburger\":\"Hamburger_Hamburger__3NeMl\",\"HamburgerOpen\":\"Hamburger_HamburgerOpen__mrovx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Links_List__1gmy_\",\"ListOpen\":\"Links_ListOpen__3d4pr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Page404_Container__3M-GG\",\"Info\":\"Page404_Info__18M-3\",\"Back\":\"Page404_Back__3Ziby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"SingleLink_ListItem__1a9Qg\",\"Link\":\"SingleLink_Link__or-Wg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Layout_Wrapper__2IrEq\",\"InnerWrapper\":\"Layout_InnerWrapper__1m1DL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__ec4_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Navbar_Wrapper__3SrXv\"};"],"sourceRoot":""}